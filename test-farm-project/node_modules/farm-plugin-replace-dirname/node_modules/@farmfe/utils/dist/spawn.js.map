{"version":3,"file":"spawn.js","sourceRoot":"","sources":["../src/spawn.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AAEpD,MAAM,UAAU,cAAc,CAAC,IAAY,EAAE,QAAsB,SAAS;IAC1E,OAAO,UAAU,GAAW,EAAE,IAAe;QAC3C,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE;YAC1B,GAAG,EAAE,IAAI;YACT,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,IAAI;SACZ,CAAC,CAAC;QACH,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,IAAS,EAAE,EAAE;gBAC3B,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { spawn, StdioOptions } from 'child_process';\n\nexport function createSpawnCmd(dest: string, stdio: StdioOptions = 'inherit') {\n  return function (cmd: string, args?: string[]): Promise<unknown> {\n    const ls = spawn(cmd, args, {\n      cwd: dest,\n      stdio: stdio,\n      shell: true\n    });\n    return new Promise((resolve, reject) => {\n      ls.on('close', (code: any) => {\n        code === 0 ? resolve(true) : reject(false);\n      });\n    }).catch((err) => {\n      console.log(err);\n    });\n  };\n}\n"]}