{"version":3,"file":"resource-loader.js","sourceRoot":"","sources":["../src/resource-loader.ts"],"names":[],"mappings":"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","sourcesContent":["// using native ability to load resources if target env is node.\n\nimport type { ModuleSystem } from './module-system.js';\nimport type { ResourceLoadResult } from './plugin.js';\n\nexport interface Resource {\n  path: string;\n  type: 0 | 1; // 0: script, 1: link\n}\n\n// Injected during build\nexport const __farm_global_this__: any = '<@__farm_global_this__@>';\nexport const __global_this__: any = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n\nexport const targetEnv = __farm_global_this__.__FARM_TARGET_ENV__ || 'node';\nexport const isBrowser =\n  targetEnv === 'browser' && __global_this__.document;\n\n/**\n * Loading resources according to their type and target env.\n */\nexport class ResourceLoader {\n  private _loadedResources: Record<string, boolean> = {};\n  private _loadingResources: Record<string, Promise<void>> = {};\n\n  publicPaths: string[];\n\n  constructor(private moduleSystem: ModuleSystem, publicPaths: string[]) {\n    this.publicPaths = publicPaths;\n  }\n\n  load(resource: Resource, index = 0): Promise<void> {\n    // it's not running in browser\n    if (!isBrowser) {\n      const result = this.moduleSystem.pluginContainer.hookBail(\n        'loadResource',\n        resource\n      );\n\n      if (result) {\n        return result.then((res: ResourceLoadResult) => {\n          if (!res.success && res.retryWithDefaultResourceLoader) {\n            if (resource.type === 0) {\n              return this._loadScript(`./${resource.path}`);\n            } else if (resource.type === 1) {\n              return this._loadLink(`./${resource.path}`);\n            }\n          } else if (!res.success) {\n            throw new Error(\n              `[Farm] Failed to load resource: \"${resource.path}, type: ${resource.type}\". Original Error: ${res.err}`\n            );\n          }\n        });\n      } else {\n        if (resource.type === 0) {\n          return this._loadScript(`./${resource.path}`);\n        } else if (resource.type === 1) {\n          return this._loadLink(`./${resource.path}`);\n        }\n      }\n    }\n\n    const publicPath = this.publicPaths[index];\n    const url = `${\n      publicPath.endsWith('/') ? publicPath.slice(0, -1) : publicPath\n    }/${resource.path}`;\n\n    if (this._loadedResources[resource.path]) {\n      return Promise.resolve();\n      // @ts-ignore\n    } else if (this._loadingResources[resource.path]) {\n      // @ts-ignore\n      return this._loadingResources[resource.path];\n    }\n\n    const result = this.moduleSystem.pluginContainer.hookBail(\n      'loadResource',\n      resource\n    );\n\n    if (result) {\n      return result.then((res: ResourceLoadResult) => {\n        if (res.success) {\n          this.setLoadedResource(resource.path);\n        } else if (res.retryWithDefaultResourceLoader) {\n          return this._load(url, resource, index);\n        } else {\n          throw new Error(\n            `[Farm] Failed to load resource: \"${resource.path}, type: ${resource.type}\". Original Error: ${res.err}`\n          );\n        }\n      });\n    } else {\n      return this._load(url, resource, index);\n    }\n  }\n\n  setLoadedResource(path: string, loaded = true) {\n    this._loadedResources[path] = loaded;\n  }\n\n  isResourceLoaded(path: string) {\n    return this._loadedResources[path];\n  }\n\n  private _load(url: string, resource: Resource, index: number): Promise<void> {\n    let promise = Promise.resolve();\n\n    if (resource.type === 0) {\n      promise = this._loadScript(url);\n    } else if (resource.type === 1) {\n      promise = this._loadLink(url);\n    }\n\n    this._loadingResources[resource.path] = promise;\n\n    promise\n      .then(() => {\n        this._loadedResources[resource.path] = true;\n        // @ts-ignore\n        this._loadingResources[resource.path] = null;\n      })\n      .catch((e) => {\n        console.warn(\n          `[Farm] Failed to load resource \"${url}\" using publicPath: ${this.publicPaths[index]}`\n        );\n        index++;\n\n        if (index < this.publicPaths.length) {\n          return this._load(url, resource, index);\n        } else {\n          // @ts-ignore\n          this._loadingResources[resource.path] = null;\n          throw new Error(\n            `[Farm] Failed to load resource: \"${resource.path}, type: ${resource.type}\". ${e}`\n          );\n        }\n      });\n    return promise;\n  }\n\n  private _loadScript(path: string): Promise<void> {\n    // @ts-ignore\n    if (FARM_RUNTIME_TARGET_ENV !== 'browser') {\n      return import(path);\n    } else {\n      return new Promise((resolve, reject) => {\n        const script = document.createElement('script');\n        script.src = path;\n        document.body.appendChild(script);\n\n        script.onload = () => {\n          resolve();\n        };\n        script.onerror = (e) => {\n          reject(e);\n        };\n      });\n    }\n  }\n\n  private _loadLink(path: string): Promise<void> {\n    // @ts-ignore\n    if (FARM_RUNTIME_TARGET_ENV !== 'browser') {\n      // return Promise.reject(new Error('Not support loading css in SSR'));\n      // ignore css loading in SSR\n      return Promise.resolve();\n    } else {\n      return new Promise((resolve, reject) => {\n        const link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.href = path;\n        document.head.appendChild(link);\n\n        link.onload = () => {\n          resolve();\n        };\n        link.onerror = (e) => {\n          reject(e);\n        };\n      });\n    }\n  }\n}\n"]}