{"version":3,"file":"module-system.js","sourceRoot":"","sources":["../src/module-system.ts"],"names":[],"mappings":"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","sourcesContent":["import { Module } from \"./module.js\";\nimport { type FarmRuntimePlugin, FarmRuntimePluginContainer } from \"./plugin.js\";\nimport {\n  type Resource,\n  ResourceLoader,\n  __global_this__,\n  isBrowser,\n  targetEnv,\n} from \"./resource-loader.js\";\n\ndeclare const nodeRequire: (id: string) => any;\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\ntype ModuleInitializationFunction = (\n  module: Module,\n  exports: any,\n  __farm_require__: (moduleId: string) => any,\n  __farm_dynamic_require__: (moduleId: string) => any,\n) => void | Promise<void>;\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport type ModuleInitialization = ModuleInitializationFunction & {\n  __farm_resource_pot__?: string;\n};\n\nexport class ModuleSystem {\n  // all modules registered\n  private modules: Record<string, ModuleInitialization>;\n  // module cache after module initialized\n  private cache: Record<string, Module>;\n  // external modules injected during compile\n  private externalModules: Record<string, any>;\n  private reRegisterModules: boolean;\n  // available public paths, when loading resources, we will try each publicPath until it is available, this is so called `resource loading retry`\n  publicPaths: string[];\n  dynamicResources: Resource[] = [];\n  // dynamic module entry and resources map\n  dynamicModuleResourcesMap: Record<string, number[]>;\n  // resources loader\n  resourceLoader: ResourceLoader;\n  // runtime plugin container\n  pluginContainer: FarmRuntimePluginContainer;\n  targetEnv: \"browser\" | \"node\";\n\n  constructor() {\n    this.modules = {};\n    this.cache = {};\n    this.publicPaths = [];\n    this.dynamicModuleResourcesMap = {};\n    this.resourceLoader = new ResourceLoader(this, this.publicPaths);\n    this.pluginContainer = new FarmRuntimePluginContainer([]);\n    this.targetEnv = targetEnv;\n    this.externalModules = {};\n    this.reRegisterModules = false;\n  }\n\n  require(moduleId: string, isCJS = false): any {\n    // return the cached exports if cache exists\n    // console.log(`[Farm] require module \"${moduleId}\" from cache`);\n    if (this.cache[moduleId]) {\n      const shouldSkip = this.pluginContainer.hookBail(\n        \"readModuleCache\",\n        this.cache[moduleId],\n      );\n\n      // console.log(`[Farm] shouldSkip: ${shouldSkip} ${moduleId}`);\n      if (!shouldSkip) {\n        const cachedModule = this.cache[moduleId];\n        return cachedModule.initializer || cachedModule.exports;\n      }\n    }\n\n    const initializer = this.modules[moduleId];\n\n    if (!initializer) {\n      if (this.externalModules[moduleId]) {\n        const exports = this.externalModules[moduleId];\n\n        // fix `const assert = require('assert');` when assert is external. This leads to `assert is not a function` error caused by default export different from esm and cjs\n        if (isCJS) {\n          return exports.default || exports;\n        }\n\n        return exports;\n      }\n      // try node require if target Env is node\n      if ((this.targetEnv === \"node\" || !isBrowser) && nodeRequire) {\n        const externalModule = nodeRequire(moduleId);\n        return externalModule;\n      }\n      this.pluginContainer.hookSerial(\"moduleNotFound\", moduleId);\n      // return a empty module if the module is not registered\n      console.debug(`[Farm] Module \"${moduleId}\" is not registered`);\n      return {};\n      // throw new Error(`Module \"${moduleId}\" is not registered`);\n    }\n\n    // create a full new module instance and store it in cache to avoid cyclic initializing\n    const module = new Module(moduleId, this.require.bind(this));\n    module.resource_pot = initializer.__farm_resource_pot__!;\n    // call the module created hook\n    this.pluginContainer.hookSerial(\"moduleCreated\", module);\n\n    this.cache[moduleId] = module;\n\n    if (!__global_this__.require) {\n      __global_this__.require =\n        this.require.bind(this);\n    }\n    // initialize the new module\n    const result = initializer(\n      module,\n      module.exports,\n      this.require.bind(this),\n      this.farmDynamicRequire.bind(this),\n    );\n\n    // it's a async module, return the promise\n    if (result && result instanceof Promise) {\n      module.initializer = result.then(() => {\n        // call the module initialized hook\n        this.pluginContainer.hookSerial(\"moduleInitialized\", module);\n        module.initializer = undefined;\n        // return the exports of the module\n        return module.exports;\n      });\n      return module.initializer;\n    } else {\n      // call the module initialized hook\n      this.pluginContainer.hookSerial(\"moduleInitialized\", module);\n      // return the exports of the module\n      return module.exports;\n    }\n  }\n\n  farmDynamicRequire(moduleId: string): Promise<any> {\n    if (this.modules[moduleId]) {\n      const exports = this.require(moduleId);\n\n      if (exports.__farm_async) {\n        return exports.default;\n      } else {\n        return Promise.resolve(exports);\n      }\n    }\n\n    return this.loadDynamicResources(moduleId);\n  }\n\n  loadDynamicResourcesOnly(moduleId: string, force = false): Promise<any> {\n    const resources = this.dynamicModuleResourcesMap[moduleId].map((index) => this.dynamicResources[index]);\n\n    if (!resources || resources.length === 0) {\n      throw new Error(\n        `Dynamic imported module \"${moduleId}\" does not belong to any resource`,\n      );\n    }\n    // force reload resources\n    if (force) {\n      this.clearCache(moduleId);\n    }\n    // loading all required resources, and return the exports of the entry module\n    return Promise.all(\n      resources.map((resource) => {\n        if (force) {\n          const resourceLoaded = this.resourceLoader.isResourceLoaded(resource.path);\n          this.resourceLoader.setLoadedResource(resource.path, false);\n\n          if (resourceLoaded) {\n            return this.resourceLoader.load({\n              ...resource,\n              // force reload the resource\n              path: `${resource.path}?t=${Date.now()}`\n            });\n          }\n        }\n        return this.resourceLoader.load(resource);\n      }),\n    )\n  }\n\n  loadDynamicResources(moduleId: string, force = false): Promise<any> {\n    const resources = this.dynamicModuleResourcesMap[moduleId].map((index) => this.dynamicResources[index]);\n  \n    return this.loadDynamicResourcesOnly(moduleId, force)\n      .then(() => {\n        // Do not require the module if all the resources are not js resources\n        if (resources.every(resource => resource.type !== 0)) {\n          return;\n        }\n\n        if (!this.modules[moduleId]) {\n          throw new Error(\n            `Dynamic imported module \"${moduleId}\" is not registered.`,\n          );\n        }\n        const result = this.require(moduleId);\n        // if the module is async, return the default export, the default export should be a promise\n        if (result.__farm_async) {\n          return result.default;\n        } else {\n          return result;\n        }\n      })\n      .catch((err) => {\n        console.error(`[Farm] Error loading dynamic module \"${moduleId}\"`, err);\n        throw err;\n      });\n  }\n\n  register(moduleId: string, initializer: ModuleInitialization): void {\n    // console.log(`[Farm] register module \"${moduleId}\"`, console.trace());\n    if (this.modules[moduleId] && !this.reRegisterModules) {\n      // throw new Error(\n      //   `Module \"${moduleId}\" has registered! It should not be registered twice`\n      // );\n      console.warn(\n        `Module \"${moduleId}\" has registered! It should not be registered twice`,\n      );\n      return;\n    }\n\n    this.modules[moduleId] = initializer;\n  }\n\n  update(moduleId: string, init: ModuleInitialization): void {\n    this.modules[moduleId] = init;\n    this.clearCache(moduleId);\n  }\n\n  delete(moduleId: string): boolean {\n    if (this.modules[moduleId]) {\n      this.clearCache(moduleId);\n      delete this.modules[moduleId];\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  getModuleUrl(moduleId: string): string {\n    const publicPath = this.publicPaths[0] ?? \"\";\n\n    if (isBrowser) {\n      const url = `${window.location.protocol}//${window.location.host}${\n        publicPath.endsWith(\"/\") ? publicPath.slice(0, -1) : publicPath\n      }/${this.modules[moduleId].__farm_resource_pot__}`;\n      return url;\n    } else {\n      return this.modules[moduleId].__farm_resource_pot__!;\n    }\n  }\n\n  getCache(moduleId: string): Module | undefined {\n    return this.cache[moduleId];\n  }\n\n  clearCache(moduleId: string): boolean {\n    if (this.cache[moduleId]) {\n      delete this.cache[moduleId];\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  setInitialLoadedResources(resources: string[]) {\n    for (const resource of resources) {\n      this.resourceLoader.setLoadedResource(resource);\n    }\n  }\n\n  // These two methods are used to support dynamic module loading, the dynamic module info is collected by the compiler and injected during compile time\n  // This method can also be called during runtime to add new dynamic modules\n  setDynamicModuleResourcesMap(\n    dynamicResources: Resource[],\n    dynamicModuleResourcesMap: Record<string, number[]>,\n  ): void {\n    this.dynamicResources = dynamicResources;\n    this.dynamicModuleResourcesMap = dynamicModuleResourcesMap;\n  }\n\n  // The public paths are injected during compile time\n  setPublicPaths(publicPaths: string[]): void {\n    this.publicPaths = publicPaths;\n    this.resourceLoader.publicPaths = this.publicPaths;\n  }\n\n  // The plugins are injected during compile time.\n  setPlugins(plugins: FarmRuntimePlugin[]): void {\n    this.pluginContainer.plugins = plugins;\n  }\n  // This method can be called during runtime to add new plugins\n  addPlugin(plugin: FarmRuntimePlugin): void {\n    if (this.pluginContainer.plugins.every((p) => p.name !== plugin.name)) {\n      this.pluginContainer.plugins.push(plugin);\n    }\n  }\n  // This method can be called during runtime to remove plugins\n  removePlugin(pluginName: string): void {\n    this.pluginContainer.plugins = this.pluginContainer.plugins.filter(\n      (p) => p.name !== pluginName,\n    );\n  }\n\n  // The external modules are injected during compile time.\n  setExternalModules(externalModules: Record<string, any>): void {\n    Object.assign(this.externalModules, externalModules || {});\n  }\n\n  // bootstrap should be called after all three methods above are called, and the bootstrap call is also injected during compile time\n  // This method should only be called once\n  bootstrap(): void {\n    this.pluginContainer.hookSerial(\"bootstrap\", this);\n  }\n}\n"]}