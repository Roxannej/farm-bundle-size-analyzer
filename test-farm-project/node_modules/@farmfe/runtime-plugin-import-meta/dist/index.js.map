{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAEA,MAAM,eAAe,GAAG,OAAO,UAAU,KAAK,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC;AAEhF,eAAwB;IACtB,IAAI,EAAE,0BAA0B;IAChC,aAAa,EAAE,EAAkB;IACjC,SAAS,CAAC,MAAoB;QAC5B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;IAC9B,CAAC;IACD,aAAa,CAAC,MAAW;QACvB,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAC7D,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,MAAM,CAAC;QACtD,MAAM,EAAE,QAAQ,EAAE,GAAG,eAAe,CAAC;QAErC,IAAI,OAAO,CAAC;QACZ,IAAI;YACF,OAAO,GAAG,CACR,QAAQ;gBACN,CAAC,CAAC,IAAI,GAAG,CACL,UAAU,EACV,GAAG,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,IAAI,EAAE,CACzC;gBACH,CAAC,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CACjC,CAAC,QAAQ,CAAC;SACZ;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,GAAG,GAAG,CAAC;SACf;QAED,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG;YAChB,GAAG,CAAC,gBAAgB,IAAI,EAAE,CAAC;YAC3B,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa;YAC3C,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;YAC3C,QAAQ,EAAE,OAAO;YACjB,GAAG,EAAE,KAAK;SACX,CAAC;QAEF,MAAM,GAAG,GAAG,QAAQ;YAClB,CAAC,CAAC,GAAG,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC,OAAO,CAC3D,KAAK,EACL,EAAE,CACH,IAAI,MAAM,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,EAAE,EAAE;YAChC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACxB,CAAC;CACD,CAAC","sourcesContent":["import type { ModuleSystem, Plugin } from '@farmfe/runtime';\n\nconst __global_this__ = typeof globalThis !== 'undefined' ? globalThis : window;\n\nexport default (<Plugin>{\n  name: 'farm-runtime-import-meta',\n  _moduleSystem: {} as ModuleSystem,\n  bootstrap(system: ModuleSystem) {\n    this._moduleSystem = system;\n  },\n  moduleCreated(module: any) {\n    const publicPath = this._moduleSystem.publicPaths?.[0] || \"\";\n    const isSSR = this._moduleSystem.targetEnv === \"node\";\n    const { location } = __global_this__;\n\n    let baseUrl;\n    try {\n      baseUrl = (\n        location\n          ? new URL(\n              publicPath,\n              `${location.protocol}//${location.host}`,\n            )\n          : new URL(module.resource_pot)\n      ).pathname;\n    } catch (_) {\n      baseUrl = '/';\n    }\n\n    module.meta.env = {\n      ...(FARM_PROCESS_ENV ?? {}),\n      dev: process.env.NODE_ENV === 'development',\n      prod: process.env.NODE_ENV === 'production',\n      BASE_URL: baseUrl,\n      SSR: isSSR,\n    };\n\n    const url = location\n      ? `${location.protocol}//${location.host}${publicPath.replace(\n        /\\/$/,\n        ''\n      )}/${module.id}?t=${Date.now()}`\n      : module.resource_pot;\n    module.meta.url = url;\n  }\n});\n"]}