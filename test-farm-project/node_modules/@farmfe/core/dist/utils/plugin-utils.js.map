{"version":3,"file":"plugin-utils.js","sourceRoot":"","sources":["../../src/utils/plugin-utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,SAAS,CAAC;AACzB,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AAI7C,MAAM,CAAC,MAAM,kBAAkB,GAAG,KAAK,EACrC,GAAW,EACX,MAKC,EACD,WAAmB,EACnB,OAAe,EACf,GAAuB,EACvB,UAAkB,EAClB,EAAE;IACF,MAAM,EAAE,OAAO,GAAG,EAAE,EAAE,cAAc,EAAE,GAAG,MAAM,CAAC;IAEhD,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;QAC7C,IAAI,QAAgB,CAAC;QACrB,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE;YACpB,QAAQ,GAAG,IAAI,CAAC;SACjB;aAAM;YACL,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SAC5B;QACD,IAAI;YACF,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;YAEhD,GAAG,CAAC,YAAY,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;SACzC;QAAC,OAAO,KAAK,EAAE;YACd,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SACvC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAI,cAAc,EAAE;QAClB,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;YACtC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC7B;aAAM;YACL,MAAM,CAAC,IAAI,CAAC,MAAM,cAAc,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC;SACzD;KACF;IAED,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3B,CAAC,CAAC;AAEF,MAAM,UAAU,UAAU,CAAC,UAAkB,EAAE,IAAY,EAAE,KAAY;IACvE,MAAM,IAAI,KAAK,CAAC,IAAI,UAAU,IAAI,IAAI,WAAW,KAAK,EAAE,KAAK,IAAI,KAAK,EAAE,CAAC,CAAC;AAC5E,CAAC;AAED,MAAM,UAAU,eAAe,CAC7B,OAA8C;IAE9C,IAAI,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE;QAC5C,OAAO,EAAE,CAAC;KACX;IAED,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC1B,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;YAC3B,OAAO;gBACL,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,WAAW,EAAE,KAAK,CAAC,WAAW;gBAC9B,sCAAsC;aACvC,CAAC;QACJ,CAAC,CAAC,CAAC;KACJ;SAAM,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QACtC,OAAO,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;YAClD,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC;QAC3C,CAAC,CAAC,CAAC;KACJ;IAED,sEAAsE;IACtE,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,MAAM,UAAU,sBAAsB,CACpC,KAAmB;IAEnB,OAAO,KAAK,CAAC,MAAM,CAAyB,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QACxD,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QAClC,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC","sourcesContent":["import fs from 'node:fs';\nimport { isAbsolute, join } from 'node:path';\nimport { Alias } from '../config/types.js';\nimport { CompilationContext } from '../plugin/type.js';\n\nexport const getAdditionContext = async (\n  cwd: string,\n  option: {\n    globals?: string[];\n    additionalData?:\n      | string\n      | ((content: string, currentFile: string) => string | Promise<string>);\n  },\n  currentFile: string,\n  content: string,\n  ctx: CompilationContext,\n  pluginName: string\n) => {\n  const { globals = [], additionalData } = option;\n\n  const result = globals.reduce((result, file) => {\n    let filepath: string;\n    if (isAbsolute(file)) {\n      filepath = file;\n    } else {\n      filepath = join(cwd, file);\n    }\n    try {\n      result.push(fs.readFileSync(filepath, 'utf-8'));\n\n      ctx.addWatchFile(currentFile, filepath);\n    } catch (error) {\n      throwError(pluginName, 'read', error);\n    }\n    return result;\n  }, []);\n\n  if (additionalData) {\n    if (typeof additionalData === 'string') {\n      result.push(additionalData);\n    } else {\n      result.push(await additionalData(content, currentFile));\n    }\n  }\n\n  return result.join('\\n');\n};\n\nexport function throwError(pluginName: string, type: string, error: Error) {\n  throw new Error(`[${pluginName} ${type} Error] ${error?.stack ?? error}`);\n}\n\nexport function getAliasEntries(\n  entries: Record<string, string> | Array<Alias>\n): any {\n  if (!entries || !Object.keys(entries).length) {\n    return [];\n  }\n\n  if (Array.isArray(entries)) {\n    return entries.map((entry) => {\n      return {\n        find: entry.find,\n        replacement: entry.replacement\n        // TODO add support for customResolver\n      };\n    });\n  } else if (typeof entries === 'object') {\n    return Object.entries(entries).map(([key, value]) => {\n      return { find: key, replacement: value };\n    });\n  }\n\n  // If entries is neither an array nor an object, return an empty array\n  return [];\n}\n\nexport function transformAliasWithVite(\n  alias: Array<Alias>\n): Record<string, string> {\n  return alias.reduce<Record<string, string>>((acc, item) => {\n    acc[item.find] = item.replacement;\n    return acc;\n  }, {});\n}\n"]}