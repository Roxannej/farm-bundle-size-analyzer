{"version":3,"file":"rebase-url.js","sourceRoot":"","sources":["../../src/utils/rebase-url.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Make sure Farm's url rebase is the same as Vite. Following code is copied from Vite and modified by brightwu(吴明亮)\n * \n * MIT License\n\nCopyright (c) 2019-present, Yuxi (Evan) You and Vite contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n */\n\nimport path from 'node:path';\nimport fse from 'fs-extra';\nimport { normalizeBasePath } from './share.js';\n\nconst nonEscapedDoubleQuoteRe = /(?<!\\\\)(\")/g;\n\ntype CssUrlReplacer = (\n  url: string,\n  importer?: string\n) => string | Promise<string>;\n// https://drafts.csswg.org/css-syntax-3/#identifier-code-point\nexport const cssUrlRE =\n  /(?<=^|[^\\w\\-\\u0080-\\uffff])url\\((\\s*('[^']+'|\"[^\"]+\")\\s*|[^'\")]+)\\)/;\nexport const cssDataUriRE =\n  /(?<=^|[^\\w\\-\\u0080-\\uffff])data-uri\\((\\s*('[^']+'|\"[^\"]+\")\\s*|[^'\")]+)\\)/;\nexport const importCssRE = /@import ('[^']+\\.css'|\"[^\"]+\\.css\"|[^'\")]+\\.css)/;\nconst functionCallRE = /^[A-Z_][\\w-]*\\(/i;\n\ntype ResolveFn = (id: string, importer?: string) => Promise<string | undefined>;\n\n/**\n * relative url() inside \\@imported sass and less files must be rebased to use\n * root file as base.\n */\nexport async function rebaseUrls(\n  file: string,\n  rootFile: string,\n  variablePrefix: string,\n  resolver: ResolveFn\n): Promise<{\n  file: string;\n  contents?: string;\n}> {\n  file = path.resolve(file); // ensure os-specific flashes\n  // in the same dir, no need to rebase\n  const fileDir = path.dirname(file);\n  const rootDir = path.dirname(rootFile);\n  if (fileDir === rootDir) {\n    return { file };\n  }\n\n  const content = await fse.readFile(file, 'utf-8');\n  // no url()\n  const hasUrls = cssUrlRE.test(content);\n  // data-uri() calls\n  const hasDataUris = cssDataUriRE.test(content);\n  // no @import xxx.css\n  const hasImportCss = importCssRE.test(content);\n\n  if (!hasUrls && !hasDataUris && !hasImportCss) {\n    return { file };\n  }\n\n  let rebased;\n  const rebaseFn = async (url: string) => {\n    if (url[0] === '/') return url;\n    // ignore url's starting with variable\n    if (url.startsWith(variablePrefix)) return url;\n\n    const absolute = (await resolver(url, file)) || path.resolve(fileDir, url);\n    const relative = path.relative(rootDir, absolute);\n    return normalizeBasePath(relative);\n  };\n\n  // fix css imports in less such as `@import \"foo.css\"`\n  if (hasImportCss) {\n    rebased = await rewriteImportCss(content, rebaseFn);\n  }\n\n  if (hasUrls) {\n    rebased = await rewriteCssUrls(rebased || content, rebaseFn);\n  }\n\n  if (hasDataUris) {\n    rebased = await rewriteCssDataUris(rebased || content, rebaseFn);\n  }\n\n  return {\n    file,\n    contents: rebased\n  };\n}\n\nfunction rewriteImportCss(\n  css: string,\n  replacer: CssUrlReplacer\n): Promise<string> {\n  return asyncReplace(css, importCssRE, async (match) => {\n    const [matched, rawUrl] = match;\n    return await doImportCSSReplace(rawUrl, matched, replacer);\n  });\n}\n\nfunction rewriteCssUrls(\n  css: string,\n  replacer: CssUrlReplacer\n): Promise<string> {\n  return asyncReplace(css, cssUrlRE, async (match) => {\n    const [matched, rawUrl] = match;\n    return await doUrlReplace(rawUrl.trim(), matched, replacer);\n  });\n}\n\nfunction rewriteCssDataUris(\n  css: string,\n  replacer: CssUrlReplacer\n): Promise<string> {\n  return asyncReplace(css, cssDataUriRE, async (match) => {\n    const [matched, rawUrl] = match;\n    return await doUrlReplace(rawUrl.trim(), matched, replacer, 'data-uri');\n  });\n}\n\nfunction skipUrlReplacer(rawUrl: string) {\n  return (\n    isExternalUrl(rawUrl) ||\n    isDataUrl(rawUrl) ||\n    rawUrl[0] === '#' ||\n    functionCallRE.test(rawUrl)\n  );\n}\nasync function doUrlReplace(\n  rawUrl: string,\n  matched: string,\n  replacer: CssUrlReplacer,\n  funcName = 'url'\n) {\n  let wrap = '';\n  const first = rawUrl[0];\n  if (first === `\"` || first === `'`) {\n    wrap = first;\n    rawUrl = rawUrl.slice(1, -1);\n  }\n\n  if (skipUrlReplacer(rawUrl)) {\n    return matched;\n  }\n\n  let newUrl = await replacer(rawUrl);\n  // The new url might need wrapping even if the original did not have it, e.g. if a space was added during replacement\n  if (wrap === '' && newUrl !== encodeURI(newUrl)) {\n    wrap = '\"';\n  }\n  // If wrapping in single quotes and newUrl also contains single quotes, switch to double quotes.\n  // Give preference to double quotes since SVG inlining converts double quotes to single quotes.\n  if (wrap === \"'\" && newUrl.includes(\"'\")) {\n    wrap = '\"';\n  }\n  // Escape double quotes if they exist (they also tend to be rarer than single quotes)\n  if (wrap === '\"' && newUrl.includes('\"')) {\n    newUrl = newUrl.replace(nonEscapedDoubleQuoteRe, '\\\\\"');\n  }\n  return `${funcName}(${wrap}${newUrl}${wrap})`;\n}\n\nasync function doImportCSSReplace(\n  rawUrl: string,\n  matched: string,\n  replacer: CssUrlReplacer\n) {\n  let wrap = '';\n  const first = rawUrl[0];\n  if (first === `\"` || first === `'`) {\n    wrap = first;\n    rawUrl = rawUrl.slice(1, -1);\n  }\n  if (isExternalUrl(rawUrl) || isDataUrl(rawUrl) || rawUrl[0] === '#') {\n    return matched;\n  }\n\n  return `@import ${wrap}${await replacer(rawUrl)}${wrap}`;\n}\n\nasync function asyncReplace(\n  input: string,\n  re: RegExp,\n  replacer: (match: RegExpExecArray) => string | Promise<string>\n): Promise<string> {\n  let match: RegExpExecArray | null;\n  let remaining = input;\n  let rewritten = '';\n  while ((match = re.exec(remaining))) {\n    rewritten += remaining.slice(0, match.index);\n    rewritten += await replacer(match);\n    remaining = remaining.slice(match.index + match[0].length);\n  }\n  rewritten += remaining;\n  return rewritten;\n}\n\nexport const externalRE = /^(https?:)?\\/\\//;\nexport const isExternalUrl = (url: string): boolean => externalRE.test(url);\n\nexport const dataUrlRE = /^\\s*data:/i;\nexport const isDataUrl = (url: string): boolean => dataUrlRE.test(url);\n"]}