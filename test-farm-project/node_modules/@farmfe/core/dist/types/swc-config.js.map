{"version":3,"file":"swc-config.js","sourceRoot":"","sources":["../../src/types/swc-config.ts"],"names":[],"mappings":"","sourcesContent":["export interface ScriptParseConfig {\n  esConfig?: {\n    jsx?: boolean;\n    fnBind?: boolean;\n    // Enable decorators.\n    decorators?: boolean;\n\n    // babel: `decorators.decoratorsBeforeExport`\n    // Effective only if `decorator` is true.\n    decoratorsBeforeExport?: boolean;\n    exportDefaultFrom?: boolean;\n    // Stage 3.\n    importAssertions?: boolean;\n    privateInObject?: boolean;\n    allowSuperOutsideMethod?: boolean;\n    allowReturnOutsideFunction?: boolean;\n  };\n  tsConfig?: {\n    tsx?: boolean;\n    decorators?: boolean;\n    /// `.d.ts`\n    dts?: boolean;\n    noEarlyErrors?: boolean;\n  };\n}\n\nexport interface ScriptDecoratorsConfig {\n  legacyDecorator: boolean;\n  decoratorMetadata: boolean;\n  /**\n   * The version of the decorator proposal to use. 2021-12 or 2022-03\n   * @default 2021-12\n   */\n  decoratorVersion: '2021-12' | '2022-03' | null;\n  /**\n   * @default []\n   */\n  includes: string[];\n  /**\n   * @default [\"node_modules/\"]\n   */\n  excludes: string[];\n}\n\n/**\n * Configuration ported from babel-preset-env\n */\nexport interface SwcPresetEnvOptions {\n  mode?: 'usage' | 'entry';\n  debug?: boolean;\n  dynamicImport?: boolean;\n\n  loose?: boolean;\n\n  /// Skipped es features.\n  ///\n  /// e.g.)\n  ///  - `core-js/modules/foo`\n  skip?: string[];\n\n  include?: string[];\n\n  exclude?: string[];\n\n  /**\n   * The version of the used core js.\n   *\n   */\n  coreJs?: string;\n\n  targets?: any;\n\n  path?: string;\n\n  shippedProposals?: boolean;\n\n  /**\n   * Enable all transforms\n   */\n  forceAllTransforms?: boolean;\n}\n\ninterface TerserEcmaVersion {}\n\ninterface TerserManglePropertiesOptions {}\n\nexport interface TerserCompressOptions {\n  arguments?: boolean;\n  arrows?: boolean;\n\n  booleans?: boolean;\n\n  booleans_as_integers?: boolean;\n\n  collapse_vars?: boolean;\n\n  comparisons?: boolean;\n\n  computed_props?: boolean;\n\n  conditionals?: boolean;\n\n  dead_code?: boolean;\n\n  defaults?: boolean;\n\n  directives?: boolean;\n\n  drop_console?: boolean;\n\n  drop_debugger?: boolean;\n\n  ecma?: TerserEcmaVersion;\n\n  evaluate?: boolean;\n\n  expression?: boolean;\n\n  global_defs?: any;\n\n  hoist_funs?: boolean;\n\n  hoist_props?: boolean;\n\n  hoist_vars?: boolean;\n\n  ie8?: boolean;\n\n  if_return?: boolean;\n\n  inline?: 0 | 1 | 2 | 3;\n\n  join_vars?: boolean;\n\n  keep_classnames?: boolean;\n\n  keep_fargs?: boolean;\n\n  keep_fnames?: boolean;\n\n  keep_infinity?: boolean;\n\n  loops?: boolean;\n  // module        : false,\n\n  negate_iife?: boolean;\n\n  passes?: number;\n\n  properties?: boolean;\n\n  pure_getters?: any;\n\n  pure_funcs?: string[];\n\n  reduce_funcs?: boolean;\n\n  reduce_vars?: boolean;\n\n  sequences?: any;\n\n  side_effects?: boolean;\n\n  switches?: boolean;\n\n  top_retain?: any;\n\n  toplevel?: any;\n\n  typeofs?: boolean;\n\n  unsafe?: boolean;\n\n  unsafe_passes?: boolean;\n\n  unsafe_arrows?: boolean;\n\n  unsafe_comps?: boolean;\n\n  unsafe_function?: boolean;\n\n  unsafe_math?: boolean;\n\n  unsafe_symbols?: boolean;\n\n  unsafe_methods?: boolean;\n\n  unsafe_proto?: boolean;\n\n  unsafe_regexp?: boolean;\n\n  unsafe_undefined?: boolean;\n\n  unused?: boolean;\n\n  const_to_let?: boolean;\n\n  module?: boolean;\n}\n\n/**\n * @example ToSnakeCase<'indentLevel'> == 'indent_level'\n */\ntype ToSnakeCase<T extends string> = T extends `${infer A}${infer B}`\n  ? `${A extends Lowercase<A> ? A : `_${Lowercase<A>}`}${ToSnakeCase<B>}`\n  : T;\n\n/**\n * @example ToSnakeCaseProperties<{indentLevel: 3}> == {indent_level: 3}\n */\ntype ToSnakeCaseProperties<T> = {\n  [K in keyof T as K extends string ? ToSnakeCase<K> : K]: T[K];\n};\n\nexport interface TerserMangleOptions {\n  props?: TerserManglePropertiesOptions;\n\n  toplevel?: boolean;\n\n  keep_classnames?: boolean;\n\n  keep_fnames?: boolean;\n\n  keep_private_props?: boolean;\n\n  ie8?: boolean;\n\n  safari10?: boolean;\n\n  reserved?: string[];\n}\n\nexport interface JsMinifyOptions {\n  compress?: ToSnakeCaseProperties<TerserCompressOptions> | boolean;\n\n  mangle?: ToSnakeCaseProperties<TerserMangleOptions> | boolean;\n\n  include?: string[];\n\n  /**\n   * @example ['.min.js$']\n   */\n  exclude?: string[];\n\n  /**\n   *\n   * @default 'minify-module'\n   */\n  mode?: 'minify-module' | 'minify-resource-pot';\n\n  /**\n   * @default true\n   */\n  moduleDecls?: boolean;\n}\n"]}