{"version":3,"file":"normalize-external.js","sourceRoot":"","sources":["../../../src/config/normalize-config/normalize-external.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,aAAa,CAAC;AAEjC,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,SAAS,CAAC;AACnD,OAAO,IAAI,MAAM,WAAW,CAAC;AAE7B,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAK9C,MAAM,UAAU,eAAe,CAC7B,iBAAsD,EAAE;IAExD,MAAM,cAAc,GAAa,EAAE,CAAC;IACpC,MAAM,cAAc,GAA2B,EAAE,CAAC;IAElD;;;;;;OAMG;IACH,KAAK,MAAM,QAAQ,IAAI,cAAc,EAAE;QACrC,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAChC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/B;aAAM,IAAI,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC7B,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;SACzC;KACF;IAED,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;AAC1C,CAAC;AAED,MAAM,UAAU,iBAAiB,CAC/B,MAAkB,EAClB,mBAAwC;IAExC,MAAM,gBAAgB,GAAa,EAAE,CAAC;IACtC,MAAM,oBAAoB,GAAG,MAAM,CAAC,WAAW,EAAE,oBAAoB,IAAI,IAAI,CAAC;IAE9E,IAAI,oBAAoB,EAAE;QACxB,IAAI,KAAK,CAAC,OAAO,CAAC,oBAAoB,CAAC,EAAE;YACvC,gBAAgB,CAAC,IAAI,CAAC,GAAG,oBAAoB,CAAC,CAAC;SAChD;aAAM,IAAI,oBAAoB,KAAK,IAAI,EAAE;YACxC,IAAI,WAAW,GAAQ,EAAE,CAAC;YAC1B,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CACvB,mBAAmB,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,EAAE,EACzC,cAAc,CACf,CAAC;YACF,iCAAiC;YACjC,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE;gBACvB,IAAI;oBACF,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;iBACzD;gBAAC,MAAM;oBACN,IAAI;iBACL;aACF;YAED,gBAAgB,CAAC,IAAI,CACnB,GAAG,CAAC,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,MAAM,CAClC,CAAC,CAAC,EAAE,EAAE,CACJ,CAAC,mBAAmB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;gBACxC,CAAC,WAAW,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;gBAClC,CAAC,WAAW,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,CAClC,CACF,CAAC;SACH;KACF;IAED,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE;QAChC,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,EAAE,CAAC;KAChC;IAED,IAAI,CAAC,mBAAmB,EAAE,MAAM,EAAE;QAChC,mBAAmB,CAAC,MAAM,GAAG,EAAE,CAAC;KACjC;IAED,MAAM,CAAC,cAAc,EAAE,cAAc,CAAC,GAAG,mBAAmB,CAC1D,MAAM,CAAC,WAAW,EAClB,mBAAmB,CACjB,mBAAmB,EACnB,eAAe,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAC7C,CACF,CAAC;IAEF,mBAAmB,CAAC,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC;QACrD,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;IAEjC,mBAAmB,CAAC,QAAQ,GAAG;QAC7B,GAAG,cAAc;QACjB,QAAQ;QACR,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC;KACtD,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,mBAAmB,CAGjC,WAAc,EACd,QAA4C;IAE5C,MAAM,CAAC,cAAc,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAC;IAClD,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE;QACxB,WAAW,CAAC,MAAM,GAAG,EAAE,CAAC;KACzB;IAED,MAAM,iBAAiB,GAA2B,WAAW,CAAC,MAAM,CAClE,WAAW,CAAC,eAAe,CAC5B;QACC,CAAC,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE;QAC1E,CAAC,CAAC,EAAE,CAAC;IAEP,OAAO;QACL,CAAC,GAAG,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,QAAQ,CAAC,iBAAiB,CAAC;YACzB,CAAC,CAAC,EAAE,GAAG,iBAAiB,EAAE,GAAG,cAAc,EAAE;YAC7C,CAAC,CAAC,cAAc;KACnB,CAAC;AACJ,CAAC","sourcesContent":["import module from 'node:module';\n\nimport { existsSync, readFileSync } from 'node:fs';\nimport path from 'node:path';\nimport { Config } from '../../types/binding.js';\nimport { safeJsonParse } from '../../utils/json.js';\nimport { isObject } from '../../utils/share.js';\nimport { CUSTOM_KEYS } from '../constants.js';\nimport type { ResolvedCompilation, UserConfig } from '../types.js';\n\ntype PartialExternal = [string[], Record<string, string>];\n\nexport function partialExternal(\n  externalConfig: (string | Record<string, string>)[] = []\n): PartialExternal {\n  const stringExternal: string[] = [];\n  const recordExternal: Record<string, string> = {};\n\n  /**\n   *\n   * `[\"^node:.*$\", { \"jquery\": \"$\" }]`\n   * =>\n   * `[\"^node:.*$\"]`\n   * `{ \"jquery\": \"$\" }`\n   */\n  for (const external of externalConfig) {\n    if (typeof external === 'string') {\n      stringExternal.push(external);\n    } else if (isObject(external)) {\n      Object.assign(recordExternal, external);\n    }\n  }\n\n  return [stringExternal, recordExternal];\n}\n\nexport function normalizeExternal(\n  config: UserConfig,\n  resolvedCompilation: ResolvedCompilation\n) {\n  const defaultExternals: string[] = [];\n  const externalNodeBuiltins = config.compilation?.externalNodeBuiltins ?? true;\n\n  if (externalNodeBuiltins) {\n    if (Array.isArray(externalNodeBuiltins)) {\n      defaultExternals.push(...externalNodeBuiltins);\n    } else if (externalNodeBuiltins === true) {\n      let packageJson: any = {};\n      const pkgPath = path.join(\n        resolvedCompilation.root || process.cwd(),\n        'package.json'\n      );\n      // the project installed polyfill\n      if (existsSync(pkgPath)) {\n        try {\n          packageJson = JSON.parse(readFileSync(pkgPath, 'utf8'));\n        } catch {\n          /**/\n        }\n      }\n\n      defaultExternals.push(\n        ...[...module.builtinModules].filter(\n          (m) =>\n            !resolvedCompilation.resolve?.alias?.[m] &&\n            !packageJson?.devDependencies?.[m] &&\n            !packageJson?.dependencies?.[m]\n        )\n      );\n    }\n  }\n\n  if (!config?.compilation?.custom) {\n    config.compilation.custom = {};\n  }\n\n  if (!resolvedCompilation?.custom) {\n    resolvedCompilation.custom = {};\n  }\n\n  const [stringExternal, recordExternal] = mergeCustomExternal(\n    config.compilation,\n    mergeCustomExternal(\n      resolvedCompilation,\n      partialExternal(config.compilation.external)\n    )\n  );\n\n  resolvedCompilation.custom[CUSTOM_KEYS.external_record] =\n    JSON.stringify(recordExternal);\n\n  resolvedCompilation.external = [\n    ...stringExternal,\n    '^node:',\n    ...defaultExternals.map((m) => `^${m}($|/promises$)`)\n  ];\n}\n\nexport function mergeCustomExternal<\n  T extends Partial<Pick<Config['config'], 'custom'>>\n>(\n  compilation: T,\n  external: ReturnType<typeof partialExternal>\n): PartialExternal {\n  const [stringExternal, recordExternal] = external;\n  if (!compilation?.custom) {\n    compilation.custom = {};\n  }\n\n  const oldRecordExternal: Record<string, string> = compilation.custom[\n    CUSTOM_KEYS.external_record\n  ]\n    ? safeJsonParse(compilation.custom[CUSTOM_KEYS.external_record], {}) || {}\n    : {};\n\n  return [\n    [...new Set(stringExternal)],\n    isObject(oldRecordExternal)\n      ? { ...oldRecordExternal, ...recordExternal }\n      : recordExternal\n  ];\n}\n"]}