import { Config } from '../../types/binding.js';
import type { ResolvedCompilation, UserConfig } from '../types.js';
type PartialExternal = [string[], Record<string, string>];
export declare function partialExternal(externalConfig?: (string | Record<string, string>)[]): PartialExternal;
export declare function normalizeExternal(config: UserConfig, resolvedCompilation: ResolvedCompilation): void;
export declare function mergeCustomExternal<T extends Partial<Pick<Config['config'], 'custom'>>>(compilation: T, external: ReturnType<typeof partialExternal>): PartialExternal;
export {};
