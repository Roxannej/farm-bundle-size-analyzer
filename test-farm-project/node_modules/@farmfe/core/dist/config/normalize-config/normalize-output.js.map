{"version":3,"file":"normalize-output.js","sourceRoot":"","sources":["../../../src/config/normalize-config/normalize-output.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,8BAA8B,EAAE,MAAM,6BAA6B,CAAC;AAE7E,OAAO,IAAI,EAAE,EAAE,UAAU,EAAE,MAAM,WAAW,CAAC;AAE7C,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAE/C,OAAO,EACL,wBAAwB,EACxB,iBAAiB,EACjB,iBAAiB,EAClB,MAAM,sBAAsB,CAAC;AAC9B,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAG9C,MAAM,UAAU,eAAe,CAC7B,MAA2B,EAC3B,YAAqB,EACrB,MAAc;IAEd,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;QAClB,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;KACpB;IAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;QAC5B,MAAM,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;KACrC;IAED,IAAI,YAAY,EAAE;QAChB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;YAC3B,MAAM,CAAC,MAAM,CAAC,QAAQ,GAAG,oCAAoC,CAAC;SAC/D;QACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE;YACjC,MAAM,CAAC,MAAM,CAAC,cAAc,GAAG,oCAAoC,CAAC;SACrE;KACF;IAED,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,EAAE;QACrC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;KAC5B;IAED,MAAM,CAAC,MAAM,GAAG;QACd,GAAG,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC;QACxB,CAAC,WAAW,CAAC,iBAAiB,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;KAChE,CAAC;IAEF,0CAA0C;IAC1C,IAAI,YAAY,EAAE;QAChB,kBAAkB,CAAC,MAAM,CAAC,CAAC;KAC5B;IAED,uDAAuD;IACvD,iBAAiB,CAAC,MAAM,CAAC,CAAC;IAE1B,sBAAsB;IACtB,MAAM,CAAC,MAAM,CAAC,UAAU,GAAG,mBAAmB,CAC5C,MAAM,CAAC,MAAM,CAAC,SAAS,EACvB,MAAM,CAAC,MAAM,EAAE,UAAU,EACzB,MAAM,CACP,CAAC;AACJ,CAAC;AAcD,MAAM,cAAc,GAAG,8BAA8B,CAAC,KAAK,CAAC,CAAC;AAC7D,MAAM,cAAc,GAAG,8BAA8B,CAAC,iBAAiB,CAAC,CAAC;AACzE,MAAM,eAAe,GAAG,CAAC,SAAS,CAAC,CAAC;AAEpC,MAAM,UAAU,GAAe;IAC7B,MAAM,EAAE;QACN,aAAa,EAAE,CAAC,SAAS,CAAC;QAC1B,UAAU,EAAE,IAAI;KACjB;IACD,aAAa,EAAE;QACb,aAAa,EAAE,CAAC,SAAS,CAAC;QAC1B,UAAU,EAAE,IAAI;KACjB;IACD,WAAW,EAAE,IAAI;IACjB,gBAAgB,EAAE;QAChB,aAAa,EAAE,eAAe;QAC9B,UAAU,EAAE,eAAe;QAC3B,eAAe,EAAE,KAAK;KACvB;IACD,gBAAgB,EAAE;QAChB,aAAa,EAAE,cAAc;QAC7B,UAAU,EAAE,cAAc;QAC1B,eAAe,EAAE,QAAQ;KAC1B;IACD,gBAAgB,EAAE;QAChB,aAAa,EAAE,cAAc;QAC7B,UAAU,EAAE,cAAc;QAC1B,eAAe,EAAE,QAAQ;KAC1B;IACD,gBAAgB,EAAE,IAAI;IACtB,OAAO,EAAE,IAAI;IACb,iBAAiB,EAAE,IAAI;IACvB,cAAc,EAAE,IAAI;CACrB,CAAC;AAEF;;;GAGG;AACH,SAAS,kBAAkB,CAAC,MAAwB;;IAClD,MAAM,QAAQ,GAAqC;QACjD,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,gBAAgB;KAC1B,CAAC;IAEF,MAAM,SAAS,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC;QAClD,MAAM,CAAC,MAAM,CAAC,SAAS,CAAqB,CAAC;IAE/C,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;QACzB,MAAM,EAAE,aAAa,EAAE,UAAU,EAAE,eAAe,EAAE,GAClD,UAAU,CAAC,SAAS,CAAC,CAAC;QACxB,2BAA2B;QAC3B,IAAI,MAAM,CAAC,SAAS,KAAK,KAAK,EAAE;YAC9B,+BAA+B;YAC/B,IAAI,aAAa,IAAI,IAAI,EAAE;gBACzB,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;iBAAM,IAAI,OAAO,MAAM,CAAC,SAAS,KAAK,QAAQ,EAAE;gBAC/C,MAAA,MAAM,CAAC,SAAS,EAAC,OAAO,QAAP,OAAO,GAAK,EAAE,EAAC;gBAChC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE;oBACrC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,GAAG,aAAa,CAAC;iBAClD;aACF;iBAAM;gBACL,IACE,wBAAwB,CAAC,QAAQ,CAAC,SAAS,CAAC;oBAC5C,MAAM,CAAC,KAAK;oBACZ,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,EAC7D;oBACA,MAAM,CAAC,SAAS,GAAG;wBACjB,OAAO,EAAE;4BACP,OAAO,EAAE,aAAa;yBACvB;qBACF,CAAC;iBACH;qBAAM;oBACL,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;iBAC1B;aACF;SACF;QAED,MAAM,CAAC,MAAM,KAAb,MAAM,CAAC,MAAM,GAAK,EAAE,OAAO,EAAE,EAAE,EAAE,EAAC;QAClC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,eAAe,IAAI,QAAQ,CAAC;QAE3E,IAAI,CAAC,MAAM;YACT,IAAI,MAAM,CAAC,GAAG,EAAE,QAAQ,KAAK,IAAI,EAAE;gBACjC,IAAI,UAAU,IAAI,IAAI,EAAE;oBACtB,MAAM,CAAC,GAAG,KAAV,MAAM,CAAC,GAAG,GAAK,EAAE,EAAC;oBAClB,MAAM,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;iBAC5B;qBAAM,IAAI,OAAO,MAAM,CAAC,GAAG,EAAE,QAAQ,KAAK,QAAQ,EAAE;oBACnD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE;wBAChC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,GAAG,UAAU,CAAC;qBAC1C;iBACF;qBAAM;oBACL,MAAM,CAAC,GAAG,KAAV,MAAM,CAAC,GAAG,GAAK,EAAE,EAAC;oBAClB,MAAM,CAAC,GAAG,CAAC,QAAQ,GAAG;wBACpB,OAAO,EAAE,UAAU;qBACpB,CAAC;iBACH;aACF;KACJ;SAAM;QACL,iCAAiC;QACjC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;QAEzB,MAAM,CAAC,MAAM,KAAb,MAAM,CAAC,MAAM,GAAK,EAAE,OAAO,EAAE,EAAE,EAAE,EAAC;QAClC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;QAEhC,MAAM,CAAC,GAAG,KAAV,MAAM,CAAC,GAAG,GAAK,EAAE,EAAC;QAClB,MAAM,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;KAC5B;AACH,CAAC;AAED,SAAS,uBAAuB,CAC9B,SAAiB,EACjB,UAA8B,EAC9B,MAAc;IAEd,IAAI,CAAC,SAAS,EAAE;QACd,OAAO,UAAU,CAAC;KACnB;IAED,IAAI,UAAU,EAAE;QACd,IAAI,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YAC7B,OAAO,UAAU,CAAC;SACnB;QAED,IAAI,UAAU,EAAE;YACd,OAAO,UAAU,CAAC;SACnB;QAED,IAAI,SAAS,KAAK,MAAM,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE;YAClD,2EAA2E;YAC3E,MAAM,YAAY,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAEtE,MAAM,CAAC,IAAI,CACT,wEAAwE,UAAU,SAAS,YAAY,IAAI,CAC5G,CAAC;YAEF,OAAO,YAAY,CAAC;SACrB;QAED,OAAO,UAAU,CAAC;KACnB;IAED,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;QAC3C,OAAO,SAAS,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;KAC1C;AACH,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,mBAAmB,CACjC,SAAiB,EACjB,UAA8B,EAC9B,MAAc,EACd,cAAc,GAAG,IAAI;IAErB,IAAI,iBAAiB,GACnB,uBAAuB,CAAC,SAAS,EAAE,UAAU,EAAE,MAAM,CAAC,IAAI,GAAG,CAAC;IAEhE,IAAI,OAAO,GAAG,KAAK,CAAC;IACpB,wBAAwB;IACxB,0BAA0B;IAC1B,IAAI,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;QACtC,OAAO,GAAG,IAAI,CAAC;KAChB;IAED,qBAAqB;IACrB,mCAAmC;IACnC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE;YACrC,OAAO,GAAG,IAAI,CAAC;SAChB;QACD,iBAAiB,GAAG,iBAAiB,GAAG,GAAG,CAAC;KAC7C;IAED,oCAAoC;IACpC,IACE,iBAAiB,CAAC,UAAU,CAAC,GAAG,CAAC;QACjC,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC;QACjC,CAAC,cAAc,EACf;QACA,iBAAiB,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAChD;IAED,OAAO;QACL,cAAc;QACd,MAAM,CAAC,IAAI,CACT,yCAAyC,UAAU,6FAA6F,CACjJ,CAAC;IAEJ,OAAO,iBAAiB,CAAC;AAC3B,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,UAAU,GAAG,GAAG;IACjD,IAAI,eAAe,GAAG,EAAE,CAAC;IAEzB,IAAI,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;QAC9B,eAAe,GAAG,UAAU,CAAC;KAC9B;SAAM,IAAI,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;QACrC,eAAe,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,CAAC;KACjE;IAED,OAAO,eAAe,CAAC;AACzB,CAAC","sourcesContent":["import { browsersWithSupportForFeatures } from 'farm-browserslist-generator';\n\nimport path, { isAbsolute } from 'node:path';\nimport { Config } from '../../types/binding.js';\nimport { urlRegex } from '../../utils/http.js';\nimport { Logger } from '../../utils/logger.js';\nimport {\n  FARM_TARGET_BROWSER_ENVS,\n  mapTargetEnvValue,\n  normalizeBasePath\n} from '../../utils/share.js';\nimport { CUSTOM_KEYS } from '../constants.js';\nimport { ResolvedCompilation } from '../types.js';\n\nexport function normalizeOutput(\n  config: ResolvedCompilation,\n  isProduction: boolean,\n  logger: Logger\n) {\n  if (!config.output) {\n    config.output = {};\n  }\n\n  if (!config.output.targetEnv) {\n    config.output.targetEnv = 'browser';\n  }\n\n  if (isProduction) {\n    if (!config.output.filename) {\n      config.output.filename = '[resourceName].[contentHash].[ext]';\n    }\n    if (!config.output.assetsFilename) {\n      config.output.assetsFilename = '[resourceName].[contentHash].[ext]';\n    }\n  }\n\n  if (config.output.clean === undefined) {\n    config.output.clean = true;\n  }\n\n  config.custom = {\n    ...(config.custom || {}),\n    [CUSTOM_KEYS.output_ascii_only]: `${!!config.output.asciiOnly}`\n  };\n\n  // only set default polyfill in production\n  if (isProduction) {\n    normalizeTargetEnv(config);\n  }\n\n  // the rust compiler only receives 'node' or 'browser'.\n  mapTargetEnvValue(config);\n\n  // resolve public path\n  config.output.publicPath = normalizePublicPath(\n    config.output.targetEnv,\n    config.output?.publicPath,\n    logger\n  );\n}\n\ntype TargetEnvKeys = Config['config']['output']['targetEnv'];\n\ntype TargetsForTargetEnv = Record<\n  TargetEnvKeys,\n  {\n    scriptGenTarget?: Config['config']['script']['target'];\n    scriptTargets: string[] | null;\n    cssTargets: string[] | null;\n  } | null\n>;\ntype TargetsMap = Omit<TargetsForTargetEnv, 'node' | 'browser'>;\n\nconst es2015Browsers = browsersWithSupportForFeatures('es6');\nconst es2017Browsers = browsersWithSupportForFeatures('async-functions');\nconst LEGACY_BROWSERS = ['ie >= 9'];\n\nconst targetsMap: TargetsMap = {\n  node16: {\n    scriptTargets: ['node 16'],\n    cssTargets: null\n  },\n  'node-legacy': {\n    scriptTargets: ['node 10'],\n    cssTargets: null\n  },\n  'node-next': null,\n  'browser-legacy': {\n    scriptTargets: LEGACY_BROWSERS,\n    cssTargets: LEGACY_BROWSERS,\n    scriptGenTarget: 'es5'\n  },\n  'browser-es2015': {\n    scriptTargets: es2015Browsers,\n    cssTargets: es2015Browsers,\n    scriptGenTarget: 'es2015'\n  },\n  'browser-es2017': {\n    scriptTargets: es2017Browsers,\n    cssTargets: es2017Browsers,\n    scriptGenTarget: 'es2017'\n  },\n  'browser-esnext': null,\n  library: null,\n  'library-browser': null,\n  'library-node': null\n};\n\n/**\n * Set up targets for the given targetEnv.\n * @param config\n */\nfunction normalizeTargetEnv(config: Config['config']) {\n  const aliasMap: Record<string, keyof TargetsMap> = {\n    node: 'node16',\n    browser: 'browser-es2017'\n  };\n\n  const targetEnv = (aliasMap[config.output.targetEnv] ??\n    config.output.targetEnv) as keyof TargetsMap;\n\n  if (targetsMap[targetEnv]) {\n    const { scriptTargets, cssTargets, scriptGenTarget } =\n      targetsMap[targetEnv];\n    // set defaults for targets\n    if (config.presetEnv !== false) {\n      // null means disable presetEnv\n      if (scriptTargets == null) {\n        config.presetEnv = false;\n      } else if (typeof config.presetEnv === 'object') {\n        config.presetEnv.options ??= {};\n        if (!config.presetEnv.options.targets) {\n          config.presetEnv.options.targets = scriptTargets;\n        }\n      } else {\n        if (\n          FARM_TARGET_BROWSER_ENVS.includes(targetEnv) &&\n          config.input &&\n          Object.values(config.input).some((v) => v?.endsWith('.html'))\n        ) {\n          config.presetEnv = {\n            options: {\n              targets: scriptTargets\n            }\n          };\n        } else {\n          config.presetEnv = false;\n        }\n      }\n    }\n\n    config.script ??= { plugins: [] };\n    config.script.target = config.script.target ?? scriptGenTarget ?? 'esnext';\n\n    if (!config)\n      if (config.css?.prefixer !== null) {\n        if (cssTargets == null) {\n          config.css ??= {};\n          config.css.prefixer = null;\n        } else if (typeof config.css?.prefixer === 'object') {\n          if (!config.css.prefixer.targets) {\n            config.css.prefixer.targets = cssTargets;\n          }\n        } else {\n          config.css ??= {};\n          config.css.prefixer = {\n            targets: cssTargets\n          };\n        }\n      }\n  } else {\n    // disable presetEnv and prefixer\n    config.presetEnv = false;\n\n    config.script ??= { plugins: [] };\n    config.script.target = 'esnext';\n\n    config.css ??= {};\n    config.css.prefixer = null;\n  }\n}\n\nfunction tryGetDefaultPublicPath(\n  targetEnv: string,\n  publicPath: string | undefined,\n  logger: Logger\n): string | undefined {\n  if (!targetEnv) {\n    return publicPath;\n  }\n\n  if (publicPath) {\n    if (urlRegex.test(publicPath)) {\n      return publicPath;\n    }\n\n    if (publicPath) {\n      return publicPath;\n    }\n\n    if (targetEnv === 'node' && isAbsolute(publicPath)) {\n      // vitejs plugin maybe set absolute path, should transform to relative path\n      const relativePath = './' + path.posix.normalize(publicPath).slice(1);\n\n      logger.warn(\n        `publicPath can't support absolute path in NodeJs, will be transform \"${publicPath}\" to \"${relativePath}\".`\n      );\n\n      return relativePath;\n    }\n\n    return publicPath;\n  }\n\n  if (['node', 'browser'].includes(targetEnv)) {\n    return targetEnv === 'node' ? './' : '/';\n  }\n}\n\n/**\n * @param outputConfig  publicPath option\n * @param logger  logger instance\n * @param isPrefixNeeded  whether to add a prefix to the publicPath\n * @returns  normalized publicPath\n */\nexport function normalizePublicPath(\n  targetEnv: string,\n  publicPath: string | undefined,\n  logger: Logger,\n  isPrefixNeeded = true\n) {\n  let defaultPublicPath =\n    tryGetDefaultPublicPath(targetEnv, publicPath, logger) ?? '/';\n\n  let warning = false;\n  // ../ or ../xxx warning\n  // normalize relative path\n  if (defaultPublicPath.startsWith('..')) {\n    warning = true;\n  }\n\n  // . ./xx => ./ ./xx/\n  // normalize appended relative path\n  if (!defaultPublicPath.endsWith('/')) {\n    if (!urlRegex.test(defaultPublicPath)) {\n      warning = true;\n    }\n    defaultPublicPath = defaultPublicPath + '/';\n  }\n\n  // normalize prepended relative path\n  if (\n    defaultPublicPath.startsWith('/') &&\n    !urlRegex.test(defaultPublicPath) &&\n    !isPrefixNeeded\n  ) {\n    defaultPublicPath = defaultPublicPath.slice(1);\n  }\n\n  warning &&\n    isPrefixNeeded &&\n    logger.warn(\n      ` (!) Irregular 'publicPath' options: '${publicPath}', it should only be an absolute path like '/publicPath/', './', an url or an empty string.`\n    );\n\n  return defaultPublicPath;\n}\n\nexport function getValidPublicPath(publicPath = '/'): string {\n  let validPublicPath = '';\n\n  if (publicPath.startsWith('/')) {\n    validPublicPath = publicPath;\n  } else if (publicPath.startsWith('.')) {\n    validPublicPath = normalizeBasePath(path.join('/', publicPath));\n  }\n\n  return validPublicPath;\n}\n"]}