{"version":3,"file":"normalize-resolve.js","sourceRoot":"","sources":["../../../src/config/normalize-config/normalize-resolve.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAG9C,MAAM,UAAU,gBAAgB,CAC9B,MAAkB,EAClB,mBAAwC;IAExC,IAAI,MAAM,GAAa;QACrB,GAAG,CAAC,MAAM,EAAE,WAAW,EAAE,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;KACnE,CAAC;IAEF,IAAI,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,MAAM,EAAE;QACxC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;QAC3C,OAAO,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;KAC1C;IAED,mBAAmB,CAAC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC;QACpD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC3B,CAAC","sourcesContent":["import { CUSTOM_KEYS } from '../constants.js';\nimport { ResolvedCompilation, UserConfig } from '../types.js';\n\nexport function normalizeResolve(\n  config: UserConfig,\n  resolvedCompilation: ResolvedCompilation\n) {\n  let dedupe: string[] = [\n    ...(config?.compilation?.custom[CUSTOM_KEYS.resolve_dedupe] ?? [])\n  ];\n\n  if (config?.compilation?.resolve?.dedupe) {\n    dedupe = config.compilation.resolve.dedupe;\n    delete config.compilation.resolve.dedupe;\n  }\n\n  resolvedCompilation.custom[CUSTOM_KEYS.resolve_dedupe] =\n    JSON.stringify(dedupe);\n}\n"]}