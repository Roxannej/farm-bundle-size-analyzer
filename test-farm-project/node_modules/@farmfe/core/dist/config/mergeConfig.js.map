{"version":3,"file":"mergeConfig.js","sourceRoot":"","sources":["../../src/config/mergeConfig.ts"],"names":[],"mappings":"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","sourcesContent":["import path, { isAbsolute } from 'node:path';\nimport { isString } from '../plugin/js/utils.js';\nimport { isArray, isObject } from '../utils/share.js';\nimport { FarmCLIOptions, UserConfig } from './types.js';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function mergeConfig<T extends Record<string, any>>(\n  userConfig: T,\n  target: T\n): T {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const result: Record<string, any> = { ...userConfig };\n  for (const key of Object.keys(target)) {\n    const left = result[key];\n    const right = target[key];\n\n    if (right === null || right === undefined) {\n      continue;\n    }\n\n    if (left === null || left === undefined) {\n      result[key] = right;\n      continue;\n    }\n\n    if (isArray(left) || isArray(right)) {\n      result[key] = [\n        ...new Set([\n          ...(isArray(left) ? left : []),\n          ...(isArray(right) ? right : [])\n        ])\n      ];\n\n      continue;\n    }\n\n    if (isObject(left) && isObject(right)) {\n      result[key] = mergeConfig(left, right);\n      continue;\n    }\n\n    result[key] = right;\n  }\n\n  return result as T;\n}\n\nexport function mergeFarmCliConfig(\n  cliOption: FarmCLIOptions & UserConfig,\n  target: UserConfig\n): UserConfig {\n  let left: UserConfig = {};\n\n  (\n    [\n      'clearScreen',\n      'compilation',\n      'envDir',\n      'envPrefix',\n      'plugins',\n      'publicDir',\n      'server',\n      'vitePlugins'\n    ] satisfies (keyof UserConfig)[]\n  ).forEach((key) => {\n    const value = cliOption[key];\n    if (value || typeof value === 'boolean') {\n      left = mergeConfig(left, { [key]: cliOption[key] });\n    }\n  });\n\n  {\n    // root\n    const configRootPath = target.root;\n\n    if (cliOption.root) {\n      const cliRoot = cliOption.root;\n\n      if (!isAbsolute(cliRoot)) {\n        target.root = path.resolve(process.cwd(), cliRoot);\n      } else {\n        target.root = cliRoot;\n      }\n    } else {\n      target.root = process.cwd();\n    }\n\n    if (configRootPath) {\n      target.root = configRootPath;\n    }\n\n    if (target.root && !isAbsolute(target.root)) {\n      const resolvedRoot = path.resolve(cliOption.configPath, target.root);\n      target.root = resolvedRoot;\n    }\n  }\n\n  if (isString(cliOption.host) || typeof cliOption.host === 'boolean') {\n    left = mergeConfig(left, { server: { host: cliOption.host } });\n  }\n\n  if (typeof cliOption.minify === 'boolean') {\n    left = mergeConfig(left, { compilation: { minify: cliOption.minify } });\n  }\n\n  if (cliOption.outDir) {\n    left = mergeConfig(left, {\n      compilation: { output: { path: cliOption.outDir } }\n    });\n  }\n\n  if (cliOption.port) {\n    left = mergeConfig(left, {\n      server: {\n        port: cliOption.port\n      }\n    });\n  }\n\n  if (cliOption.mode) {\n    left = mergeConfig(left, {\n      compilation: {\n        mode: cliOption.mode as UserConfig['compilation']['mode']\n      }\n    });\n  }\n\n  if (cliOption.https) {\n    left = mergeConfig(left, {\n      server: {\n        https: cliOption.https\n      }\n    });\n  }\n\n  if (cliOption.sourcemap) {\n    left = mergeConfig(left, {\n      compilation: { sourcemap: cliOption.sourcemap }\n    });\n  }\n\n  return mergeConfig(left, target);\n}\n\nexport function initialCliOptions(options: FarmCLIOptions): FarmCLIOptions {\n  return {\n    ...options\n  };\n}\n"]}