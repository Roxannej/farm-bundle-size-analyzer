{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/config/index.ts"],"names":[],"mappings":"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","sourcesContent":["import crypto from 'node:crypto';\nimport fs from 'node:fs';\nimport module from 'node:module';\nimport path, { isAbsolute, join } from 'node:path';\nimport { pathToFileURL } from 'node:url';\n\nimport { bindingPath } from '../../binding/index.js';\nimport { OutputConfig } from '../types/binding.js';\n\nimport { JsPlugin } from '../index.js';\nimport {\n  getSortedPlugins,\n  handleVitePlugins,\n  resolveAsyncPlugins,\n  resolveConfigHook,\n  resolveConfigResolvedHook,\n  resolveFarmPlugins\n} from '../plugin/index.js';\nimport { Server } from '../server/index.js';\nimport {\n  Logger,\n  bold,\n  clearScreen,\n  colors,\n  getAliasEntries,\n  green,\n  isArray,\n  isEmptyObject,\n  isNodeEnv,\n  isObject,\n  isWindows,\n  normalizeBasePath,\n  normalizePath,\n  transformAliasWithVite\n} from '../utils/index.js';\nimport { traceDependencies } from '../utils/trace-dependencies.js';\nimport { __FARM_GLOBAL__ } from './_global.js';\nimport {\n  CompilationMode,\n  getExistsEnvFiles,\n  loadEnv,\n  setProcessEnv\n} from './env.js';\nimport {\n  getValidPublicPath,\n  normalizeOutput\n} from './normalize-config/normalize-output.js';\nimport { normalizePersistentCache } from './normalize-config/normalize-persistent-cache.js';\nimport { parseUserConfig } from './schema.js';\n\nimport { externalAdapter } from '../plugin/js/external-adapter.js';\nimport { convertErrorMessage } from '../utils/error.js';\nimport merge from '../utils/merge.js';\nimport {\n  CUSTOM_KEYS,\n  DEFAULT_CONFIG_NAMES,\n  FARM_DEFAULT_NAMESPACE\n} from './constants.js';\nimport { mergeConfig, mergeFarmCliConfig } from './mergeConfig.js';\nimport { normalizeAsset } from './normalize-config/normalize-asset.js';\nimport { normalizeCss } from './normalize-config/normalize-css.js';\nimport { normalizeExternal } from './normalize-config/normalize-external.js';\nimport { normalizeResolve } from './normalize-config/normalize-resolve.js';\nimport type {\n  Alias,\n  FarmCLIOptions,\n  NormalizedServerConfig,\n  ResolvedCompilation,\n  ResolvedUserConfig,\n  UserConfig,\n  UserConfigExport,\n  UserConfigFnObject,\n  UserHmrConfig,\n  UserServerConfig\n} from './types.js';\n\nexport * from './types.js';\n\nexport function defineFarmConfig(config: UserConfig): UserConfig;\nexport function defineFarmConfig(\n  config: Promise<UserConfig>\n): Promise<UserConfig>;\nexport function defineFarmConfig(\n  config: UserConfigFnObject\n): UserConfigFnObject;\nexport function defineFarmConfig(config: UserConfigExport): UserConfigExport;\nexport function defineFarmConfig(config: UserConfigExport): UserConfigExport {\n  return config;\n}\n\nasync function getDefaultConfig(\n  config: UserConfig,\n  inlineOptions: FarmCLIOptions,\n  mode?: CompilationMode,\n  logger?: Logger\n) {\n  logger = logger ?? new Logger();\n  const resolvedUserConfig = await resolveMergedUserConfig(\n    config,\n    undefined,\n    inlineOptions.mode ?? mode,\n    logger\n  );\n\n  resolvedUserConfig.server = normalizeDevServerConfig(\n    inlineOptions.server,\n    mode\n  );\n\n  resolvedUserConfig.compilation = await normalizeUserCompilationConfig(\n    resolvedUserConfig,\n    config,\n    logger,\n    mode,\n    true\n  );\n  resolvedUserConfig.root = resolvedUserConfig.compilation.root;\n  resolvedUserConfig.jsPlugins = [];\n  resolvedUserConfig.rustPlugins = [];\n\n  return resolvedUserConfig;\n}\n\nasync function handleServerPortConflict(\n  resolvedUserConfig: ResolvedUserConfig,\n  logger: Logger,\n  mode?: CompilationMode\n) {\n  // check port availability: auto increment the port if a conflict occurs\n\n  try {\n    mode !== 'production' &&\n      (await Server.resolvePortConflict(resolvedUserConfig.server, logger));\n    // eslint-disable-next-line no-empty\n  } catch {}\n}\n\n/**\n * Resolve and load user config from the specified path\n * @param configPath\n */\nexport async function resolveConfig(\n  inlineOptions: FarmCLIOptions & UserConfig = {},\n  mode?: CompilationMode,\n  logger?: Logger,\n  isHandleServerPortConflict = true\n): Promise<ResolvedUserConfig> {\n  // Clear the console according to the cli command\n\n  checkClearScreen(inlineOptions);\n  logger = logger ?? new Logger();\n  inlineOptions.mode = inlineOptions.mode ?? mode;\n  // configPath may be file or directory\n  let { configPath } = inlineOptions;\n  let rawConfig: UserConfig = mergeFarmCliConfig(inlineOptions, {});\n\n  // if the config file can not found, just merge cli options and return default\n  if (configPath) {\n    if (!path.isAbsolute(configPath)) {\n      throw new Error('configPath must be an absolute path');\n    }\n    const loadedUserConfig = await loadConfigFile(\n      configPath,\n      inlineOptions,\n      mode,\n      logger\n    );\n\n    if (loadedUserConfig) {\n      configPath = loadedUserConfig.configFilePath;\n      rawConfig = mergeConfig(rawConfig, loadedUserConfig.config);\n    }\n    rawConfig.compilation.mode =\n      loadedUserConfig?.config?.compilation?.mode ?? mode;\n  } else {\n    mergeConfig(\n      rawConfig,\n      await getDefaultConfig(rawConfig, inlineOptions, mode, logger)\n    );\n  }\n\n  const { config: userConfig, configFilePath } = {\n    configFilePath: configPath,\n    config: rawConfig\n  };\n\n  const { jsPlugins, vitePlugins, rustPlugins, vitePluginAdapters } =\n    await resolvePlugins(userConfig, logger, mode);\n\n  const sortFarmJsPlugins = getSortedPlugins([\n    ...jsPlugins,\n    ...vitePluginAdapters,\n    externalAdapter()\n  ]);\n\n  const config = await resolveConfigHook(userConfig, sortFarmJsPlugins);\n\n  const mergedUserConfig = mergeFarmCliConfig(inlineOptions, config);\n\n  const resolvedUserConfig = await resolveMergedUserConfig(\n    mergedUserConfig,\n    configFilePath,\n    inlineOptions.mode ?? mode,\n    logger\n  );\n\n  // normalize server config first cause it may be used in normalizeUserCompilationConfig\n  resolvedUserConfig.server = normalizeDevServerConfig(\n    resolvedUserConfig.server,\n    mode\n  );\n\n  if (isHandleServerPortConflict) {\n    await handleServerPortConflict(resolvedUserConfig, logger, mode);\n  }\n\n  resolvedUserConfig.compilation = await normalizeUserCompilationConfig(\n    resolvedUserConfig,\n    mergedUserConfig,\n    logger,\n    mode\n  );\n\n  // normalize root path\n  resolvedUserConfig.root = normalizeBasePath(\n    resolvedUserConfig.compilation.root\n  );\n  resolvedUserConfig.jsPlugins = sortFarmJsPlugins;\n  resolvedUserConfig.rustPlugins = rustPlugins;\n\n  // Temporarily dealing with alias objects and arrays in js will be unified in rust in the future.]\n  if (vitePlugins.length) {\n    resolvedUserConfig.compilation.resolve.alias = getAliasEntries(\n      resolvedUserConfig.compilation.resolve.alias\n    );\n  }\n\n  await resolveConfigResolvedHook(resolvedUserConfig, sortFarmJsPlugins); // Fix: Await the Promise<void> and pass the resolved value to the function.\n\n  // TODO Temporarily solve the problem of alias adaptation to vite\n  if (resolvedUserConfig.compilation?.resolve?.alias && vitePlugins.length) {\n    resolvedUserConfig.compilation.resolve.alias = transformAliasWithVite(\n      resolvedUserConfig.compilation.resolve.alias as unknown as Array<Alias>\n    );\n  }\n\n  return resolvedUserConfig;\n}\n\n/**\n * Normalize user config and transform it to rust compiler compatible config\n *\n *\n * ResolvedUserConfig is a parameter passed to rust Compiler,\n * and ResolvedUserConfig is generated from UserConfig.\n * When UserConfig is different from ResolvedUserConfig,\n * a legal value should be given to the ResolvedUserConfig field here,\n * and converted from UserConfig in the subsequent process.\n *\n * @param config\n * @returns resolved config that parsed to rust compiler\n */\nexport async function normalizeUserCompilationConfig(\n  resolvedUserConfig: ResolvedUserConfig,\n  userConfig: UserConfig,\n  logger: Logger,\n  mode: CompilationMode = 'development',\n  isDefault = false\n): Promise<ResolvedCompilation> {\n  const { compilation, root = process.cwd(), clearScreen } = resolvedUserConfig;\n\n  // resolve root path\n  const resolvedRootPath = normalizePath(root);\n\n  resolvedUserConfig.root = resolvedRootPath;\n\n  if (!userConfig.compilation) {\n    userConfig.compilation = {};\n  }\n\n  // if normalize default config, skip check input option\n  const inputIndexConfig = !isDefault\n    ? checkCompilationInputValue(userConfig, logger)\n    : {};\n\n  const resolvedCompilation: ResolvedCompilation = merge(\n    {},\n    DEFAULT_COMPILATION_OPTIONS,\n    {\n      input: inputIndexConfig,\n      root: resolvedRootPath\n    },\n    {\n      clearScreen\n    },\n    compilation\n  );\n\n  const isProduction = mode === 'production';\n  const isDevelopment = mode === 'development';\n  resolvedCompilation.mode = resolvedCompilation.mode ?? mode;\n\n  resolvedCompilation.coreLibPath = bindingPath;\n\n  normalizeOutput(resolvedCompilation, isProduction, logger);\n  normalizeExternal(userConfig, resolvedCompilation);\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore do not check type for this internal option\n  if (!resolvedCompilation.assets?.publicDir) {\n    if (!resolvedCompilation.assets) {\n      resolvedCompilation.assets = {};\n    }\n\n    const userPublicDir = resolvedUserConfig.publicDir\n      ? resolvedUserConfig.publicDir\n      : join(resolvedCompilation.root, 'public');\n\n    if (isAbsolute(userPublicDir)) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore do not check type for this internal option\n      resolvedCompilation.assets.publicDir = userPublicDir;\n    } else {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore do not check type for this internal option\n      resolvedCompilation.assets.publicDir = join(\n        resolvedCompilation.root,\n        userPublicDir\n      );\n    }\n  }\n\n  resolvedCompilation.define = Object.assign(\n    {\n      // skip self define\n      ['FARM' + '_PROCESS_ENV']: resolvedUserConfig.env,\n      FARM_RUNTIME_TARGET_ENV: JSON.stringify(\n        resolvedCompilation.output?.targetEnv\n      )\n    },\n    resolvedCompilation?.define,\n    // for node target, we should not define process.env.NODE_ENV\n    resolvedCompilation.output?.targetEnv === 'node'\n      ? {}\n      : Object.keys(resolvedUserConfig.env || {}).reduce((env: any, key) => {\n          env[`$__farm_regex:(global(This)?\\\\.)?process\\\\.env\\\\.${key}`] =\n            JSON.stringify(resolvedUserConfig.env[key]);\n          return env;\n        }, {})\n  );\n\n  const require = module.createRequire(import.meta.url);\n  const hmrClientPluginPath = require.resolve('@farmfe/runtime-plugin-hmr');\n  const ImportMetaPluginPath = require.resolve(\n    '@farmfe/runtime-plugin-import-meta'\n  );\n\n  if (!resolvedCompilation.runtime) {\n    resolvedCompilation.runtime = {\n      path: require.resolve('@farmfe/runtime'),\n      plugins: []\n    };\n  }\n\n  if (!resolvedCompilation.runtime.path) {\n    resolvedCompilation.runtime.path = require.resolve('@farmfe/runtime');\n  }\n\n  if (!resolvedCompilation.runtime.swcHelpersPath) {\n    resolvedCompilation.runtime.swcHelpersPath = path.dirname(\n      require.resolve('@swc/helpers/package.json')\n    );\n  }\n\n  if (!resolvedCompilation.runtime.plugins) {\n    resolvedCompilation.runtime.plugins = [];\n  } else {\n    // make sure all plugin paths are absolute\n    resolvedCompilation.runtime.plugins =\n      resolvedCompilation.runtime.plugins.map((plugin) => {\n        if (!path.isAbsolute(plugin)) {\n          if (!plugin.startsWith('.')) {\n            // resolve plugin from node_modules\n            return require.resolve(plugin);\n          } else {\n            return path.resolve(resolvedRootPath, plugin);\n          }\n        }\n\n        return plugin;\n      });\n  }\n  // set namespace to package.json name field's hash\n  if (!resolvedCompilation.runtime.namespace) {\n    // read package.json name field\n    const packageJsonPath = path.resolve(resolvedRootPath, 'package.json');\n    const packageJsonExists = fs.existsSync(packageJsonPath);\n    const namespaceName = packageJsonExists\n      ? JSON.parse(fs.readFileSync(packageJsonPath, { encoding: 'utf-8' }))\n          ?.name ?? FARM_DEFAULT_NAMESPACE\n      : FARM_DEFAULT_NAMESPACE;\n\n    resolvedCompilation.runtime.namespace = crypto\n      .createHash('md5')\n      .update(namespaceName)\n      .digest('hex');\n  }\n\n  if (isProduction) {\n    resolvedCompilation.lazyCompilation = false;\n  } else if (resolvedCompilation.lazyCompilation === undefined) {\n    if (isDevelopment) {\n      resolvedCompilation.lazyCompilation = true;\n    } else {\n      resolvedCompilation.lazyCompilation = false;\n    }\n  }\n\n  if (resolvedCompilation.mode === undefined) {\n    resolvedCompilation.mode = mode;\n  }\n  setProcessEnv(resolvedCompilation.mode);\n  // TODO add targetEnv `lib-browser` and `lib-node` support\n  if (\n    resolvedCompilation.output.targetEnv !== 'node' &&\n    isArray(resolvedCompilation.runtime.plugins) &&\n    resolvedUserConfig.server?.hmr &&\n    !resolvedCompilation.runtime.plugins.includes(hmrClientPluginPath)\n  ) {\n    const publicPath = getValidPublicPath(\n      resolvedCompilation.output.publicPath\n    );\n    const serverOptions = resolvedUserConfig.server;\n    const defineHmrPath = normalizeBasePath(\n      path.join(publicPath, resolvedUserConfig.server.hmr.path)\n    );\n\n    resolvedCompilation.runtime.plugins.push(hmrClientPluginPath);\n    // TODO optimize get hmr logic\n    resolvedCompilation.define.FARM_HMR_PORT = String(\n      (serverOptions.hmr.port || undefined) ??\n        serverOptions.port ??\n        DEFAULT_DEV_SERVER_OPTIONS.port\n    );\n    resolvedCompilation.define.FARM_HMR_HOST = JSON.stringify(\n      resolvedUserConfig.server.hmr.host\n    );\n    resolvedCompilation.define.FARM_HMR_PROTOCOL = JSON.stringify(\n      resolvedUserConfig.server.hmr.protocol\n    );\n    resolvedCompilation.define.FARM_HMR_PATH = JSON.stringify(defineHmrPath);\n  }\n\n  if (\n    isArray(resolvedCompilation.runtime.plugins) &&\n    !resolvedCompilation.runtime.plugins.includes(ImportMetaPluginPath)\n  ) {\n    resolvedCompilation.runtime.plugins.push(ImportMetaPluginPath);\n  }\n\n  // we should not deep merge compilation.input\n  if (compilation?.input && Object.keys(compilation.input).length > 0) {\n    // Add ./ if userConfig.input is relative path without ./\n    const input: Record<string, string> = {};\n\n    for (const [key, value] of Object.entries(compilation.input)) {\n      if (!value && (value ?? true)) continue;\n      if (!path.isAbsolute(value) && !value.startsWith('./')) {\n        input[key] = `./${value}`;\n      } else {\n        input[key] = value;\n      }\n    }\n\n    resolvedCompilation.input = input;\n  }\n\n  if (resolvedCompilation.treeShaking === undefined) {\n    if (isProduction) {\n      resolvedCompilation.treeShaking = true;\n    } else {\n      resolvedCompilation.treeShaking = false;\n    }\n  }\n\n  if (resolvedCompilation.script?.plugins?.length) {\n    logger.info(\n      `Swc plugins are configured, note that Farm uses ${colors.yellow(\n        'swc_core v0.96'\n      )}, please make sure the plugin is ${colors.green(\n        'compatible'\n      )} with swc_core ${colors.yellow(\n        'swc_core v0.96'\n      )}. Otherwise, it may exit unexpectedly.`\n    );\n  }\n\n  // lazyCompilation should be disabled in production mode\n  // so, it only happens in development mode\n  // https://github.com/farm-fe/farm/issues/962\n  if (resolvedCompilation.treeShaking && resolvedCompilation.lazyCompilation) {\n    logger.error(\n      'treeShaking option is not supported in lazyCompilation mode, lazyCompilation will be disabled.'\n    );\n    resolvedCompilation.lazyCompilation = false;\n  }\n\n  if (resolvedCompilation.minify === undefined) {\n    if (isProduction) {\n      resolvedCompilation.minify = true;\n    } else {\n      resolvedCompilation.minify = false;\n    }\n  }\n\n  if (resolvedCompilation.presetEnv === undefined) {\n    if (isProduction) {\n      resolvedCompilation.presetEnv = true;\n    } else {\n      resolvedCompilation.presetEnv = false;\n    }\n  }\n\n  // setting the custom configuration\n  resolvedCompilation.custom = {\n    ...(resolvedCompilation.custom || {}),\n    [CUSTOM_KEYS.runtime_isolate]: `${!!resolvedCompilation.runtime.isolate}`\n  };\n\n  // Auto enable decorator by default when `script.decorators` is enabled\n  if (resolvedCompilation.script?.decorators !== undefined)\n    if (resolvedCompilation.script.parser === undefined) {\n      resolvedCompilation.script.parser = {\n        esConfig: {\n          decorators: true\n        },\n        tsConfig: {\n          decorators: true\n        }\n      };\n    } else {\n      if (resolvedCompilation.script.parser.esConfig !== undefined)\n        resolvedCompilation.script.parser.esConfig.decorators = true;\n      else\n        resolvedCompilation.script.parser.esConfig = {\n          decorators: true\n        };\n      if (resolvedCompilation.script.parser.tsConfig !== undefined)\n        resolvedCompilation.script.parser.tsConfig.decorators = true;\n      else\n        userConfig.compilation.script.parser.tsConfig = {\n          decorators: true\n        };\n    }\n\n  // normalize persistent cache at last\n  await normalizePersistentCache(\n    resolvedCompilation,\n    resolvedUserConfig,\n    logger\n  );\n\n  normalizeResolve(userConfig, resolvedCompilation);\n  normalizeCss(userConfig, resolvedCompilation);\n  normalizeAsset(userConfig, resolvedCompilation);\n\n  return resolvedCompilation;\n}\n\nexport const DEFAULT_HMR_OPTIONS: Required<UserHmrConfig> = {\n  host: true,\n  port:\n    (process.env.FARM_DEFAULT_HMR_PORT &&\n      Number(process.env.FARM_DEFAULT_HMR_PORT)) ??\n    undefined,\n  path: '/__hmr',\n  overlay: true,\n  protocol: '',\n  watchOptions: {}\n};\n\nexport const DEFAULT_DEV_SERVER_OPTIONS: NormalizedServerConfig = {\n  headers: {},\n  port:\n    (process.env.FARM_DEFAULT_SERVER_PORT &&\n      Number(process.env.FARM_DEFAULT_SERVER_PORT)) ||\n    9000,\n  https: undefined,\n  protocol: 'http',\n  hostname: { name: 'localhost', host: undefined },\n  allowedHosts: [],\n  host: true,\n  proxy: {},\n  hmr: DEFAULT_HMR_OPTIONS,\n  open: false,\n  strictPort: false,\n  cors: false,\n  spa: true,\n  middlewares: [],\n  writeToDisk: false\n};\n\nexport const DEFAULT_COMPILATION_OPTIONS: Partial<ResolvedCompilation> = {\n  output: {\n    path: './dist'\n  },\n  sourcemap: true,\n  resolve: {\n    extensions: [\n      'tsx',\n      'mts',\n      'cts',\n      'ts',\n      'jsx',\n      'mjs',\n      'js',\n      'cjs',\n      'json',\n      'html',\n      'css',\n      'mts',\n      'cts'\n    ]\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction tryAsFileRead(value?: any): string | Buffer {\n  if (typeof value === 'string' && fs.existsSync(value)) {\n    return fs.readFileSync(path.resolve(value.toString()));\n  }\n\n  return value;\n}\n\nexport function normalizeDevServerConfig(\n  options: UserServerConfig | undefined,\n  mode: string\n): NormalizedServerConfig {\n  const { host, port, hmr: hmrConfig, https } = options || {};\n  const isProductionMode = mode === 'production';\n  const hmr =\n    isProductionMode || hmrConfig === false\n      ? false\n      : merge(\n          {},\n          DEFAULT_HMR_OPTIONS,\n          {\n            host: host ?? DEFAULT_DEV_SERVER_OPTIONS.host,\n            port: port ?? DEFAULT_DEV_SERVER_OPTIONS.port\n          },\n          hmrConfig === true ? {} : hmrConfig\n        );\n\n  return merge({}, DEFAULT_DEV_SERVER_OPTIONS, options, {\n    hmr,\n    https: https\n      ? {\n          ...https,\n          ca: tryAsFileRead(options.https.ca),\n          cert: tryAsFileRead(options.https.cert),\n          key: tryAsFileRead(options.https.key),\n          pfx: tryAsFileRead(options.https.pfx)\n        }\n      : undefined\n  }) as NormalizedServerConfig;\n}\n\ntype Format = Exclude<OutputConfig['format'], undefined>;\nconst formatFromExt: Record<string, Format> = {\n  cjs: 'cjs',\n  mjs: 'esm',\n  cts: 'cjs',\n  mts: 'esm',\n  js: 'esm'\n};\n\nconst formatToExt: Record<Format, string> = {\n  cjs: 'cjs',\n  esm: 'mjs'\n};\n\nasync function readConfigFile(\n  inlineOptions: FarmCLIOptions,\n  configFilePath: string,\n  logger: Logger,\n  mode: CompilationMode = 'development'\n): Promise<UserConfig | undefined> {\n  if (fs.existsSync(configFilePath)) {\n    !__FARM_GLOBAL__.__FARM_RESTART_DEV_SERVER__ &&\n      logger.info(`Using config file at ${bold(green(configFilePath))}`);\n    const format: Format = process.env.FARM_CONFIG_FORMAT\n      ? process.env.FARM_CONFIG_FORMAT === 'cjs'\n        ? 'cjs'\n        : 'esm'\n      : formatFromExt[path.extname(configFilePath).slice(1)] ?? 'esm';\n    // we need transform all type farm.config with __dirname and __filename\n    const Compiler = (await import('../compiler/index.js')).Compiler;\n    const outputPath = path.join(\n      path.dirname(configFilePath),\n      'node_modules',\n      '.farm'\n    );\n\n    const fileName = `farm.config.bundle-${Date.now()}-${Math.random()\n      .toString(16)\n      .split('.')\n      .join('')}.${formatToExt[format]}`;\n\n    const tsDefaultUserConfig: UserConfig = {\n      root: inlineOptions.root,\n      compilation: {\n        input: {\n          [fileName]: configFilePath\n        },\n        output: {\n          entryFilename: '[entryName]',\n          path: outputPath,\n          format,\n          targetEnv: 'library-node'\n        },\n        external: [\n          ...(process.env.FARM_CONFIG_FULL_BUNDLE\n            ? []\n            : ['!^(\\\\./|\\\\.\\\\./|[A-Za-z]:\\\\\\\\|/).*']),\n          '^@farmfe/core$'\n        ],\n        partialBundling: {\n          enforceResources: [\n            {\n              name: fileName,\n              test: ['.+']\n            }\n          ]\n        },\n        watch: false,\n        sourcemap: false,\n        treeShaking: false,\n        minify: false,\n        presetEnv: false,\n        lazyCompilation: false,\n        persistentCache: false,\n        progress: false\n      }\n    };\n\n    const tsDefaultResolvedUserConfig: ResolvedUserConfig =\n      await resolveMergedUserConfig(\n        tsDefaultUserConfig,\n        undefined,\n        mode,\n        logger\n      );\n\n    const normalizedConfig = await normalizeUserCompilationConfig(\n      tsDefaultResolvedUserConfig,\n      tsDefaultUserConfig,\n      logger,\n      mode\n    );\n\n    const replaceDirnamePlugin = await import(\n      'farm-plugin-replace-dirname'\n    ).then((mod) => mod.default);\n\n    const compiler = new Compiler(\n      {\n        config: normalizedConfig,\n        jsPlugins: [],\n        rustPlugins: [[replaceDirnamePlugin, '{}']]\n      },\n      logger\n    );\n\n    const FARM_PROFILE = process.env.FARM_PROFILE;\n    // disable FARM_PROFILE in farm_config\n    if (FARM_PROFILE) {\n      process.env.FARM_PROFILE = '';\n    }\n    await compiler.compile();\n\n    if (FARM_PROFILE) {\n      process.env.FARM_PROFILE = FARM_PROFILE;\n    }\n\n    compiler.writeResourcesToDisk();\n\n    const filePath = isWindows\n      ? pathToFileURL(path.join(outputPath, fileName))\n      : path.join(outputPath, fileName);\n\n    // Change to vm.module of node or loaders as far as it is stable\n    const userConfig = (await import(filePath as string)).default;\n    try {\n      fs.unlink(filePath, () => void 0);\n      // remove parent dir if empty\n      const isEmpty = fs.readdirSync(outputPath).length === 0;\n      if (isEmpty) {\n        fs.rmSync(outputPath);\n      }\n    } catch {\n      /** do nothing */\n    }\n\n    const configEnv = { mode: inlineOptions.mode ?? process.env.NODE_ENV };\n    const config = await (typeof userConfig === 'function'\n      ? userConfig(configEnv)\n      : userConfig);\n\n    if (!config.root) {\n      config.root = inlineOptions.root;\n    }\n\n    if (!isObject(config)) {\n      throw new Error(`config must export or return an object.`);\n    }\n    return config;\n  }\n}\n\nexport function normalizePublicDir(root: string, userPublicDir?: string) {\n  const publicDir = userPublicDir ?? 'public';\n  const absPublicDirPath = path.isAbsolute(publicDir)\n    ? publicDir\n    : path.join(root, publicDir);\n  return absPublicDirPath;\n}\n\nexport function checkClearScreen(\n  inlineConfig: FarmCLIOptions | ResolvedUserConfig\n) {\n  if (\n    inlineConfig?.clearScreen &&\n    !__FARM_GLOBAL__.__FARM_RESTART_DEV_SERVER__\n  ) {\n    clearScreen();\n  }\n}\n\nexport async function resolveMergedUserConfig(\n  mergedUserConfig: UserConfig,\n  configFilePath: string | undefined,\n  mode: 'development' | 'production' | string,\n  logger: Logger = new Logger()\n): Promise<ResolvedUserConfig> {\n  const resolvedUserConfig = {\n    ...mergedUserConfig,\n    compilation: {\n      ...mergedUserConfig.compilation,\n      external: []\n    }\n  } as ResolvedUserConfig;\n\n  // set internal config\n  resolvedUserConfig.envMode = mode;\n\n  if (configFilePath) {\n    const dependencies = await traceDependencies(configFilePath, logger);\n    dependencies.sort();\n    resolvedUserConfig.configFileDependencies = dependencies;\n    resolvedUserConfig.configFilePath = configFilePath;\n  }\n\n  const resolvedRootPath = resolvedUserConfig.root ?? process.cwd();\n  const resolvedEnvPath = resolvedUserConfig.envDir\n    ? resolvedUserConfig.envDir\n    : resolvedRootPath;\n\n  const userEnv = loadEnv(\n    resolvedUserConfig.envMode ?? mode,\n    resolvedEnvPath,\n    resolvedUserConfig.envPrefix\n  );\n  const existsEnvFiles = getExistsEnvFiles(\n    resolvedUserConfig.envMode ?? mode,\n    resolvedEnvPath\n  );\n\n  resolvedUserConfig.envFiles = [\n    ...(Array.isArray(resolvedUserConfig.envFiles)\n      ? resolvedUserConfig.envFiles\n      : []),\n    ...existsEnvFiles\n  ];\n\n  resolvedUserConfig.env = {\n    ...userEnv,\n    NODE_ENV: mergedUserConfig.compilation.mode ?? mode,\n    mode: mode\n  };\n\n  return resolvedUserConfig;\n}\n\n/**\n * Load config file from the specified path and return the config and config file path\n * @param configPath the config path, could be a directory or a file\n * @param logger custom logger\n * @returns loaded config and config file path\n */\nexport async function loadConfigFile(\n  configPath: string,\n  inlineOptions: FarmCLIOptions,\n  mode: CompilationMode = 'development',\n  logger: Logger = new Logger()\n): Promise<{ config: UserConfig; configFilePath: string } | undefined> {\n  // if configPath points to a directory, try to find a config file in it using default config\n  try {\n    const configFilePath = await getConfigFilePath(configPath);\n\n    if (configFilePath) {\n      const config = await readConfigFile(\n        inlineOptions,\n        configFilePath,\n        logger,\n        mode\n      );\n\n      return {\n        config: config && parseUserConfig(config),\n        configFilePath: configFilePath\n      };\n    }\n  } catch (error) {\n    // In this place, the original use of throw caused emit to the outermost catch\n    // callback, causing the code not to execute. If the internal catch compiler's own\n    // throw error can solve this problem, it will not continue to affect the execution of\n    // external code. We just need to return the default config.\n    const errorMessage = convertErrorMessage(error);\n    const stackTrace =\n      error.code === 'GenericFailure' ? '' : `\\n${error.stack}`;\n\n    if (inlineOptions.mode === 'production') {\n      logger.error(\n        `Failed to load config file: ${errorMessage} \\n${stackTrace}`,\n        {\n          exit: true\n        }\n      );\n    }\n\n    const potentialSolution =\n      'Potential solutions: \\n1. Try set `FARM_CONFIG_FORMAT=cjs`(default to esm)\\n2. Try set `FARM_CONFIG_FULL_BUNDLE=1`';\n\n    throw new Error(\n      `Failed to load farm config file: ${errorMessage}. \\n ${potentialSolution} \\n ${error.stack}`\n    );\n  }\n}\n\nfunction checkCompilationInputValue(userConfig: UserConfig, logger: Logger) {\n  const { compilation } = userConfig;\n  const targetEnv = compilation?.output?.targetEnv;\n  const isTargetNode = isNodeEnv(targetEnv);\n  const defaultHtmlPath = './index.html';\n  let inputIndexConfig: { index?: string } = { index: '' };\n  let errorMessage = '';\n\n  // Check if input is specified\n  if (!isEmptyObject(compilation?.input)) {\n    inputIndexConfig = compilation?.input;\n  } else {\n    if (isTargetNode) {\n      // If input is not specified, try to find index.js or index.ts\n      const entryFiles = ['./index.js', './index.ts'];\n\n      for (const entryFile of entryFiles) {\n        try {\n          if (fs.statSync(path.resolve(userConfig?.root, entryFile))) {\n            inputIndexConfig = { index: entryFile };\n            break;\n          }\n        } catch (error) {\n          errorMessage = error.stack;\n        }\n      }\n    } else {\n      try {\n        if (fs.statSync(path.resolve(userConfig?.root, defaultHtmlPath))) {\n          inputIndexConfig = { index: defaultHtmlPath };\n        }\n      } catch (error) {\n        errorMessage = error.stack;\n      }\n    }\n\n    // If no index file is found, throw an error\n    if (!inputIndexConfig.index) {\n      logger.error(\n        `Build failed due to errors: Can not resolve ${\n          isTargetNode ? 'index.js or index.ts' : 'index.html'\n        }  from ${userConfig.root}. \\n${errorMessage}`,\n        { exit: true }\n      );\n    }\n  }\n\n  return inputIndexConfig;\n}\n\nexport async function getConfigFilePath(\n  configPath: string\n): Promise<string | undefined> {\n  if (fs.statSync(configPath).isDirectory()) {\n    for (const name of DEFAULT_CONFIG_NAMES) {\n      const resolvedPath = path.join(configPath, name);\n      const isFile =\n        fs.existsSync(resolvedPath) && fs.statSync(resolvedPath).isFile();\n\n      if (isFile) {\n        return resolvedPath;\n      }\n    }\n  } else if (fs.statSync(configPath).isFile()) {\n    return configPath;\n  }\n\n  return undefined;\n}\n\nexport async function resolvePlugins(\n  userConfig: UserConfig,\n  logger: Logger,\n  mode: CompilationMode\n) {\n  const { jsPlugins, rustPlugins } = await resolveFarmPlugins(userConfig);\n  const rawJsPlugins = (await resolveAsyncPlugins(jsPlugins || [])).filter(\n    Boolean\n  );\n\n  let vitePluginAdapters: JsPlugin[] = [];\n  const vitePlugins = (userConfig?.vitePlugins ?? []).filter(Boolean);\n\n  if (vitePlugins.length) {\n    vitePluginAdapters = await handleVitePlugins(\n      vitePlugins,\n      userConfig,\n      logger,\n      mode\n    );\n  }\n\n  return {\n    jsPlugins: rawJsPlugins,\n    vitePlugins,\n    rustPlugins,\n    vitePluginAdapters\n  };\n}\n"]}