{"version":3,"file":"error.js","sourceRoot":"","sources":["../../src/server/error.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RollupError } from 'rollup';\nimport { colors } from '../utils/color.js';\nimport { pad } from '../utils/share.js';\n// import { DevServer } from './index.js';\n\nexport function prepareError(err: Error & { potentialSolution?: string }) {\n  return {\n    message: stripAnsi(err.message),\n    stack: stripAnsi(cleanStack(err.stack || '')),\n    id: (err as RollupError).id,\n    frame: stripAnsi((err as RollupError).frame || ''),\n    plugin: (err as RollupError).plugin,\n    pluginCode: (err as RollupError).pluginCode?.toString(),\n    loc: (err as RollupError).loc,\n    potential: err.potentialSolution || ''\n  };\n}\n\nexport function stripAnsi(str: string) {\n  // eslint-disable-next-line no-control-regex\n  return str.replace(/\\x1b\\[[0-9;]*m/g, '');\n}\n\nexport function cleanStack(stack: string) {\n  return stack\n    .split(/\\n/g)\n    .filter((l) => /^\\s*at/.test(l))\n    .join('\\n');\n}\n\nexport function buildErrorMessage(\n  err: RollupError & { source: string },\n  args: string[] = [],\n  includeStack = true\n): string {\n  if (err.plugin) args.push(`  Plugin: ${colors.magenta(err.plugin)}`);\n  const loc = err.loc ? `:${err.loc.line}:${err.loc.column}` : '';\n  if (err.id) args.push(`  File: ${colors.cyan(err.id)}${loc}`);\n  if (err.frame) args.push(colors.yellow(pad(err.frame)));\n  else if (err.source) args.push(colors.yellow(err.source));\n  if (includeStack && err.stack) args.push(pad(cleanStack(err.stack)));\n  return args.join('\\n');\n}\n\nexport function logError(err: Error, throwErrorFlag = true) {\n  let errorMessages: string[] = [];\n  try {\n    errorMessages = JSON.parse(err.message);\n  } catch (_) {\n    throw new Error(err.message);\n  }\n\n  if (!Array.isArray(errorMessages) || errorMessages.length === 0) {\n    if (throwErrorFlag) {\n      throw new Error(err.message);\n    }\n    return err.message;\n  }\n\n  const formattedErrorMessages = errorMessages.map((errorMsg: string) => {\n    try {\n      const parsedErrorMsg = JSON.parse(errorMsg);\n      if (\n        parsedErrorMsg &&\n        typeof parsedErrorMsg === 'object' &&\n        (parsedErrorMsg.message || parsedErrorMsg.reason)\n      ) {\n        return `${buildErrorMessage(parsedErrorMsg, [\n          colors.red(\n            `Internal server error: ${\n              parsedErrorMsg.message || parsedErrorMsg.reason\n            }`\n          )\n        ])}`;\n      } else {\n        return colors.red(errorMsg);\n      }\n    } catch {\n      return colors.red(errorMsg);\n    }\n  });\n  const errorMessage = formattedErrorMessages.join('\\n');\n  if (throwErrorFlag) {\n    throw new Error(errorMessage);\n  }\n  return errorMessage;\n}\n\n// TODO server logger e.g: DevServer.logger.error(msg);\n\n//   server.ws.send({\n//     type: 'error',\n//     err: prepareError(err)\n//   });\n// }\n"]}