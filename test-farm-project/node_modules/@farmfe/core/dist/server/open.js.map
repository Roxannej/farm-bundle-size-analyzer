{"version":3,"file":"open.js","sourceRoot":"","sources":["../../src/server/open.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * The following is modified based on source found in\n * https://github.com/facebook/create-react-app\n *\n * MIT Licensed\n * Copyright (c) 2015-present, Facebook, Inc.\n * https://github.com/facebook/create-react-app/blob/master/LICENSE\n */\n\nimport path from 'node:path';\nimport { fileURLToPath } from 'node:url';\n\nimport { execSync } from 'child_process';\nimport { execa } from 'execa';\nimport open from 'open';\nimport { Logger, cyan, red } from '../utils/index.js';\n\n// https://github.com/sindresorhus/open#app\nconst OSX_CHROME = 'google chrome';\n\nconst enum Actions {\n  NONE,\n  BROWSER,\n  SCRIPT\n}\n\nfunction getBrowserEnv() {\n  // Attempt to honor this environment variable.\n  // It is specific to the operating system.\n  // See https://github.com/sindresorhus/open#app for documentation.\n  const value = process.env.BROWSER;\n  let action;\n  if (!value) {\n    // Default.\n    action = Actions.BROWSER;\n  } else if (value.toLowerCase().endsWith('.js')) {\n    action = Actions.SCRIPT;\n  } else if (value.toLowerCase() === 'none') {\n    action = Actions.NONE;\n  } else {\n    action = Actions.BROWSER;\n  }\n  return { action, value };\n}\n\nfunction executeNodeScript(scriptPath: string, url: string) {\n  const extraArgs = process.argv.slice(2);\n  const child = execa('node', [scriptPath, ...extraArgs, url], {\n    stdio: 'inherit'\n  });\n  child.on('close', (code: number) => {\n    if (code !== 0) {\n      console.log();\n      console.log(\n        red('The script specified as BROWSER environment variable failed.')\n      );\n      console.log(cyan(scriptPath) + ' exited with code ' + code + '.');\n      console.log();\n      return;\n    }\n  });\n  return true;\n}\n\nfunction startBrowserProcess(browser: string | undefined, url: string) {\n  // If we're on OS X, the user hasn't specifically\n  // requested a different browser, we can try opening\n  // Chrome with AppleScript. This lets us reuse an\n  // existing tab when possible instead of creating a new one.\n  const shouldTryOpenChromeWithAppleScript =\n    process.platform === 'darwin' &&\n    (typeof browser !== 'string' || browser === OSX_CHROME);\n\n  const dirname = path.dirname(fileURLToPath(import.meta.url));\n  if (shouldTryOpenChromeWithAppleScript) {\n    try {\n      // Try our best to reuse existing tab\n      // on OS X Google Chrome with AppleScript\n      execSync('ps cax | grep \"Google Chrome\"');\n      execSync('osascript openChrome.applescript \"' + encodeURI(url) + '\"', {\n        cwd: path.resolve(dirname, '../../bin'),\n        stdio: 'ignore'\n      });\n      return true;\n    } catch {\n      // Ignore errors\n    }\n  }\n\n  // Another special case: on OS X, check if BROWSER has been set to \"open\".\n  // In this case, instead of passing the string `open` to `open` function (which won't work),\n  // just ignore it (thus ensuring the intended behavior, i.e. opening the system browser):\n  // https://github.com/facebook/create-react-app/pull/1690#issuecomment-283518768\n  if (process.platform === 'darwin' && browser === 'open') {\n    browser = undefined;\n  }\n\n  // Fallback to open\n  // (It will always open new tab)\n  try {\n    const options = browser ? { app: { name: browser, arguments: [] } } : {};\n    const logger = new Logger();\n    open(url, options).catch((e: Error) => {\n      logger.error(e);\n    }); // Prevent `unhandledRejection` error.\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Reads the BROWSER environment variable and decides what to do with it. Returns\n * true if it opened a browser or ran a node.js script, otherwise false.\n */\nexport function openBrowser(url: string) {\n  const { action, value } = getBrowserEnv();\n  switch (action) {\n    case Actions.NONE:\n      // Special case: BROWSER=\"none\" will prevent opening completely.\n      return false;\n    case Actions.SCRIPT:\n      return executeNodeScript(value, url);\n    case Actions.BROWSER:\n      return startBrowserProcess(value, url);\n    default:\n      throw new Error('Not implemented.');\n  }\n}\n"]}