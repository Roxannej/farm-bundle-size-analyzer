{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/plugin/js/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { CompilationMode } from '../../config/env.js';\nimport {\n  type JsPlugin,\n  Logger,\n  type UserConfig,\n  normalizeDevServerConfig\n} from '../../index.js';\nimport merge from '../../utils/merge.js';\nimport { resolveAsyncPlugins } from '../index.js';\nimport { cssPluginUnwrap, cssPluginWrap } from './adapter-plugins/css.js';\nimport { defaultLoadPlugin } from './adapter-plugins/default-load.js';\nimport { DEFAULT_FILTERS, normalizeFilterPath } from './utils.js';\nimport { VitePluginAdapter } from './vite-plugin-adapter.js';\n\n// export * from './jsPluginAdapter.js';\nexport { VitePluginAdapter } from './vite-plugin-adapter.js';\n\ntype VitePluginType = object | (() => { vitePlugin: any; filters: string[] });\ntype VitePluginsType = VitePluginType[];\n\nexport async function handleVitePlugins(\n  vitePlugins: VitePluginsType,\n  userConfig: UserConfig,\n  logger: Logger,\n  mode: CompilationMode\n): Promise<JsPlugin[]> {\n  const jsPlugins: JsPlugin[] = [];\n  const filtersUnion = new Set<string>();\n\n  if (vitePlugins.length) {\n    userConfig = merge({}, userConfig, {\n      compilation: userConfig.compilation,\n      server: normalizeDevServerConfig(\n        userConfig.server,\n        userConfig.compilation?.mode ?? mode\n      )\n    });\n  }\n  const flatVitePlugins = await resolveAsyncPlugins(vitePlugins);\n\n  for (const vitePluginObj of flatVitePlugins) {\n    let vitePlugin = vitePluginObj,\n      filters = DEFAULT_FILTERS;\n\n    if (typeof vitePluginObj === 'function') {\n      const { vitePlugin: plugin, filters: f } = vitePluginObj();\n      vitePlugin = plugin;\n      filters = f;\n    }\n    filters?.forEach((filter) => filtersUnion.add(filter));\n    processVitePlugin(vitePlugin, userConfig, filters, jsPlugins, logger, mode);\n  }\n\n  // if vitePlugins is not empty, append a load plugin to load file\n  // this plugin is only for compatibility\n  if (vitePlugins.length) {\n    jsPlugins.push(\n      defaultLoadPlugin({\n        filtersUnion,\n        logger,\n        userConfig\n      })\n    );\n    jsPlugins.unshift(cssPluginWrap({ filtersUnion }));\n    jsPlugins.push(cssPluginUnwrap({ filtersUnion }));\n  }\n\n  return jsPlugins;\n}\n\nexport function processVitePlugin(\n  vitePlugin: VitePluginType,\n  userConfig: UserConfig,\n  filters: string[],\n  jsPlugins: JsPlugin[],\n  logger: Logger,\n  mode: CompilationMode\n) {\n  const processPlugin = (plugin: any) => {\n    const vitePluginAdapter = new VitePluginAdapter(\n      plugin as any,\n      userConfig,\n      filters,\n      logger,\n      mode\n    );\n    convertPlugin(vitePluginAdapter);\n    jsPlugins.push(vitePluginAdapter);\n  };\n\n  if (Array.isArray(vitePlugin)) {\n    vitePlugin.forEach((plugin) => processPlugin(plugin));\n  } else {\n    processPlugin(vitePlugin);\n  }\n}\n\nexport function convertPlugin(plugin: JsPlugin): void {\n  if (\n    plugin.transform &&\n    !plugin.transform.filters?.moduleTypes &&\n    !plugin.transform.filters?.resolvedPaths\n  ) {\n    throw new Error(\n      `transform hook of plugin ${plugin.name} must have at least one filter(like moduleTypes or resolvedPaths)`\n    );\n  }\n  if (plugin.transform) {\n    if (!plugin.transform.filters.moduleTypes) {\n      plugin.transform.filters.moduleTypes = [];\n    } else if (!plugin.transform.filters.resolvedPaths) {\n      plugin.transform.filters.resolvedPaths = [];\n    }\n  }\n\n  if (plugin.processModule) {\n    plugin.processModule.filters ??= {};\n    plugin.processModule.filters.moduleTypes ??= [];\n    plugin.processModule.filters.resolvedPaths ??= [];\n  }\n\n  if (plugin.renderResourcePot) {\n    plugin.renderResourcePot.filters ??= {};\n\n    if (\n      !plugin.renderResourcePot?.filters?.moduleIds &&\n      !plugin.renderResourcePot?.filters?.resourcePotTypes\n    ) {\n      throw new Error(\n        `renderResourcePot hook of plugin ${plugin.name} must have at least one filter(like moduleIds or resourcePotTypes)`\n      );\n    }\n\n    if (!plugin.renderResourcePot.filters?.resourcePotTypes) {\n      plugin.renderResourcePot.filters.resourcePotTypes = [];\n    } else if (!plugin.renderResourcePot.filters?.moduleIds) {\n      plugin.renderResourcePot.filters.moduleIds = [];\n    }\n  }\n\n  if (plugin.augmentResourceHash) {\n    plugin.augmentResourceHash.filters ??= {};\n\n    if (\n      !plugin.augmentResourceHash?.filters?.moduleIds &&\n      !plugin.augmentResourceHash?.filters?.resourcePotTypes\n    ) {\n      throw new Error(\n        `augmentResourceHash hook of plugin ${plugin.name} must have at least one filter(like moduleIds or resourcePotTypes)`\n      );\n    }\n\n    if (!plugin.augmentResourceHash.filters?.resourcePotTypes) {\n      plugin.augmentResourceHash.filters.resourcePotTypes = [];\n    } else if (!plugin.augmentResourceHash.filters?.moduleIds) {\n      plugin.augmentResourceHash.filters.moduleIds = [];\n    }\n  }\n\n  if (plugin.resolve?.filters?.importers?.length) {\n    plugin.resolve.filters.importers =\n      plugin.resolve.filters.importers.map(normalizeFilterPath);\n  }\n\n  if (plugin.load?.filters?.resolvedPaths?.length) {\n    plugin.load.filters.resolvedPaths =\n      plugin.load.filters.resolvedPaths.map(normalizeFilterPath);\n  }\n\n  if (plugin.transform?.filters?.resolvedPaths?.length) {\n    plugin.transform.filters.resolvedPaths =\n      plugin.transform.filters.resolvedPaths.map(normalizeFilterPath);\n  }\n  if (plugin.augmentResourceHash?.filters?.moduleIds) {\n    plugin.augmentResourceHash.filters.moduleIds =\n      plugin.augmentResourceHash.filters.moduleIds.map(normalizeFilterPath);\n  }\n\n  if (plugin.renderResourcePot?.filters?.moduleIds) {\n    plugin.renderResourcePot.filters.moduleIds =\n      plugin.renderResourcePot.filters.moduleIds.map(normalizeFilterPath);\n  }\n}\n"]}