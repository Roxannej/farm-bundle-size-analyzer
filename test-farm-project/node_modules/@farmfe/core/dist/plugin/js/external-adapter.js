import { CUSTOM_KEYS } from '../../config/constants.js';
import { mergeCustomExternal, partialExternal } from '../../config/normalize-config/normalize-external.js';
import { isArray } from '../../utils/share.js';
/**
 * avoid add new external in config hook
 */
export function externalAdapter() {
    return {
        name: 'farm:external-adapter',
        priority: -Infinity,
        config(config) {
            if (config?.compilation?.external &&
                isArray(config.compilation.external)) {
                let [stringExternal, recordExternal] = mergeCustomExternal(config?.compilation, partialExternal(config.compilation.external));
                return {
                    compilation: {
                        external: stringExternal,
                        custom: {
                            [CUSTOM_KEYS.external_record]: JSON.stringify(recordExternal)
                        }
                    }
                };
            }
        }
    };
}
//# sourceMappingURL=external-adapter.js.map