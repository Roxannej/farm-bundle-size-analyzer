{"version":3,"file":"css.js","sourceRoot":"","sources":["../../../../src/plugin/js/adapter-plugins/css.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAGH,OAAO,EAAE,mBAAmB,EAAE,MAAM,aAAa,CAAC;AAElD,MAAM,KAAK,GAAG,gCAAgC,CAAC;AAC/C,MAAM,GAAG,GAAG,8BAA8B,CAAC;AAE3C,MAAM,UAAU,aAAa,CAAC,OAE7B;IACC,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC;IACjC,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IAExE,OAAO;QACL,IAAI,EAAE,8BAA8B;QACpC,QAAQ,EAAE,EAAE;QACZ,SAAS,EAAE;YACT,OAAO,EAAE;gBACP,aAAa;gBACb,WAAW,EAAE,EAAE;aAChB;YACD,KAAK,CAAC,QAAQ,CAAC,KAAK;gBAClB,IAAI,KAAK,CAAC,UAAU,KAAK,KAAK,EAAE;oBAC9B,OAAO;wBACL,OAAO,EAAE,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,GAAG;qBACrC,CAAC;iBACH;YACH,CAAC;SACF;KACF,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,OAE/B;IACC,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC;IACjC,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IAExE,OAAO;QACL,IAAI,EAAE,gCAAgC;QACtC,QAAQ,EAAE,EAAE;QACZ,SAAS,EAAE;YACT,OAAO,EAAE;gBACP,aAAa;gBACb,WAAW,EAAE,EAAE;aAChB;YACD,KAAK,CAAC,QAAQ,CAAC,KAAK;gBAClB,IAAI,KAAK,CAAC,UAAU,KAAK,KAAK,EAAE;oBAC9B,OAAO;wBACL,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;qBAC3D,CAAC;iBACH;YACH,CAAC;SACF;KACF,CAAC;AACJ,CAAC","sourcesContent":["/**\n * Hack plugin to transform css for Vite compatibility:\n * 1. wrap the css code with `` before post plugins execute(priority 98)\n * 2. unwrap the css code from `` after post plugins execute\n */\n\nimport { JsPlugin } from '../../type.js';\nimport { normalizeFilterPath } from '../utils.js';\n\nconst BEGIN = '__farm_vite_css_hack_start__=`';\nconst END = '`;__farm_vite_css_hack_end__';\n\nexport function cssPluginWrap(options: {\n  filtersUnion: Set<string>;\n}): JsPlugin {\n  const { filtersUnion } = options;\n  const resolvedPaths = Array.from(filtersUnion).map(normalizeFilterPath);\n\n  return {\n    name: 'vite-adapter-css-plugin-wrap',\n    priority: 98,\n    transform: {\n      filters: {\n        resolvedPaths,\n        moduleTypes: []\n      },\n      async executor(param) {\n        if (param.moduleType === 'css') {\n          return {\n            content: BEGIN + param.content + END\n          };\n        }\n      }\n    }\n  };\n}\n\nexport function cssPluginUnwrap(options: {\n  filtersUnion: Set<string>;\n}): JsPlugin {\n  const { filtersUnion } = options;\n  const resolvedPaths = Array.from(filtersUnion).map(normalizeFilterPath);\n\n  return {\n    name: 'vite-adapter-css-plugin-unwrap',\n    priority: 98,\n    transform: {\n      filters: {\n        resolvedPaths,\n        moduleTypes: []\n      },\n      async executor(param) {\n        if (param.moduleType === 'css') {\n          return {\n            content: param.content.replace(BEGIN, '').replace(END, '')\n          };\n        }\n      }\n    }\n  };\n}\n"]}