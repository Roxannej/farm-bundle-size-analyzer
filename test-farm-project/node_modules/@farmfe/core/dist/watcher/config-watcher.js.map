{"version":3,"file":"config-watcher.js","sourceRoot":"","sources":["../../src/watcher/config-watcher.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,IAAI,CAAC;AAGhC,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEpD,MAAM,OAAO,aAAa;IAIxB,YAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAFlD,WAAM,GAAG,KAAK,CAAC;QAGrB,IAAI,CAAC,kBAAkB,EAAE;YACvB,MAAM,IAAI,KAAK,CACb,6DAA6D,CAC9D,CAAC;SACH;IACH,CAAC;IAED,KAAK,CAAC,QAAkC;QACtC,KAAK,UAAU,MAAM,CAAC,IAAc;YAClC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QAED,MAAM,eAAe,GAAG,IAAI,GAAG,CAAS;YACtC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,IAAI,EAAE,CAAC;YAC3C,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,IAAI,EAAE,CAAC;YACzD,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc;gBACxC,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC;gBAC1C,CAAC,CAAC,EAAE,CAAC;SACR,CAAC,CAAC;QAEH,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,CACrD,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,CACnC,CAAC;QACF,MAAM,eAAe,GAAG;YACtB,gBAAgB,EACd,OAAO,CAAC,QAAQ,KAAK,OAAO;gBAC1B,CAAC,CAAC,SAAS;gBACX,CAAC,CAAC;oBACE,kBAAkB,EAAE,EAAE;oBACtB,YAAY,EAAE,EAAE;iBACjB;SACR,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,aAAa,CAC1B,IAAI,CAAC,kBAAkB,EACvB,YAAY,EACZ,eAAe,CAChB,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,EAAE;YACjC,IAAI,IAAI,CAAC,MAAM;gBAAE,OAAO;YACxB,IAAI,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBAC/B,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK;QACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;CACF","sourcesContent":["import { existsSync } from 'fs';\nimport { FSWatcher } from 'chokidar';\nimport { ResolvedUserConfig } from '../config/index.js';\nimport { createWatcher } from './create-watcher.js';\n\nexport class ConfigWatcher {\n  private watcher: FSWatcher;\n  private _close = false;\n\n  constructor(private resolvedUserConfig: ResolvedUserConfig) {\n    if (!resolvedUserConfig) {\n      throw new Error(\n        'Invalid resolvedUserConfig provided to Farm JsConfigWatcher'\n      );\n    }\n  }\n\n  watch(callback: (file: string[]) => void) {\n    async function handle(file: string[]) {\n      callback(file);\n    }\n\n    const watchedFilesSet = new Set<string>([\n      ...(this.resolvedUserConfig.envFiles ?? []),\n      ...(this.resolvedUserConfig.configFileDependencies ?? []),\n      ...(this.resolvedUserConfig.configFilePath\n        ? [this.resolvedUserConfig.configFilePath]\n        : [])\n    ]);\n\n    const watchedFiles = Array.from(watchedFilesSet).filter(\n      (file) => file && existsSync(file)\n    );\n    const chokidarOptions = {\n      awaitWriteFinish:\n        process.platform === 'linux'\n          ? undefined\n          : {\n              stabilityThreshold: 10,\n              pollInterval: 80\n            }\n    };\n    this.watcher = createWatcher(\n      this.resolvedUserConfig,\n      watchedFiles,\n      chokidarOptions\n    );\n\n    this.watcher.on('change', (path) => {\n      if (this._close) return;\n      if (watchedFiles.includes(path)) {\n        handle([path]);\n      }\n    });\n    return this;\n  }\n\n  close() {\n    this._close = true;\n    this.watcher = null;\n  }\n}\n"]}