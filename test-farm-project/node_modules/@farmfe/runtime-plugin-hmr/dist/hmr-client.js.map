{"version":3,"file":"hmr-client.js","sourceRoot":"","sources":["../src/hmr-client.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ModuleSystem } from '@farmfe/runtime';\nimport { HotModuleState } from './hot-module-state.js';\nimport { logger } from './logger.js';\nimport { ErrorOverlay, overlayId } from './overlay.js';\nimport { HMRPayload, HmrUpdateResult, RawHmrUpdateResult } from './types.js';\n\n// Inject during compile time\nconst usingClientHost = typeof FARM_HMR_HOST === 'boolean'; // using client host/port by default\nconst hmrPort = usingClientHost ? window.location.port : Number(FARM_HMR_PORT);\nconst hmrHost = usingClientHost ? window.location.hostname : FARM_HMR_HOST;\n\nconst socketProtocol =\n  FARM_HMR_PROTOCOL || (location.protocol === 'https:' ? 'wss' : 'ws');\nconst socketHostUrl = `${hmrHost}:${hmrPort}${FARM_HMR_PATH}`;\n\nexport class HmrClient {\n  socket: WebSocket;\n  registeredHotModulesMap = new Map<string, HotModuleState>();\n  disposeMap = new Map<string, (data: any) => void | Promise<void>>();\n  pruneMap = new Map<string, (data: any) => void | Promise<void>>();\n  customListenersMap = new Map<\n    string,\n    ((data: any) => void | Promise<void>)[]\n  >();\n\n  constructor(private moduleSystem: ModuleSystem) {}\n\n  connect() {\n    logger.debug('connecting to the server...');\n\n    // setup websocket connection\n    const socket = new WebSocket(\n      `${socketProtocol}://${socketHostUrl}`,\n      'farm_hmr'\n    );\n    this.socket = socket;\n    // listen for the message from the server\n    // when the user save the file, the server will recompile the file(and its dependencies as long as its dependencies are changed)\n    // after the file is recompiled, the server will generated a update resource and send its id to the client\n    // the client will apply the update\n    socket.addEventListener('message', (event) => {\n      const result: HMRPayload = new Function(`return (${event.data})`)();\n      if (result?.type === 'closing') {\n        this.closeConnectionGracefully();\n        return;\n      }\n      this.handleMessage(result);\n    });\n\n    socket.addEventListener(\n      'open',\n      () => {\n        this.notifyListeners('vite:ws:connect', { webSocket: socket });\n        this.notifyListeners('farm:ws:connect', { webSocket: socket });\n      },\n      { once: true }\n    );\n\n    socket.addEventListener('close', async () => {\n      // TODO Do you want to do an elegant cleaning?\n      // if (wasClean) return;\n\n      this.notifyListeners('vite:ws:disconnect', { webSocket: socket });\n      this.notifyListeners('farm:ws:disconnect', { webSocket: socket });\n\n      logger.debug('disconnected from the server, please reload the page.');\n      await waitForSuccessfulPing(socketProtocol, `${socketHostUrl}`);\n      location.reload();\n    });\n\n    return socket;\n  }\n\n  closeConnectionGracefully() {\n    if (\n      this.socket.readyState === WebSocket.CLOSING ||\n      this.socket.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n    this.socket.close(1000, 'Client closing connection');\n  }\n\n  async applyHotUpdates(result: HmrUpdateResult, moduleSystem: ModuleSystem) {\n    result.changed.forEach((id) => {\n      logger.debug(`${id} updated`);\n    });\n\n    for (const id of result.removed) {\n      const prune = this.pruneMap.get(id);\n      if (prune) {\n        const hotContext = this.registeredHotModulesMap.get(id);\n        await prune(hotContext.data);\n      }\n\n      moduleSystem.delete(id);\n      this.registeredHotModulesMap.delete(id);\n    }\n\n    for (const id of result.added) {\n      moduleSystem.register(id, result.modules[id]);\n    }\n\n    for (const id of result.changed) {\n      moduleSystem.update(id, result.modules[id]);\n\n      if (!result.boundaries[id]) {\n        // do not found boundary module, reload the window\n        location.reload();\n      }\n    }\n\n    if (result.dynamicResources && result) {\n      moduleSystem.setDynamicModuleResourcesMap(\n        result.dynamicResources,\n        result.dynamicModuleResourcesMap\n      );\n    }\n\n    for (const chains of Object.values(result.boundaries)) {\n      for (const chain of chains) {\n        // clear the cache of the boundary module and its dependencies\n        for (const id of chain) {\n          moduleSystem.clearCache(id);\n        }\n\n        try {\n          // require the boundary module\n          const boundary = chain[chain.length - 1];\n          const hotContext = this.registeredHotModulesMap.get(boundary);\n          const acceptedDep =\n            chain.length > 1 ? chain[chain.length - 2] : undefined;\n\n          if (!hotContext) {\n            logger.debug(\n              `hot context is empty for boundary ${boundary}. Hot update of ${boundary} is skipped.`\n            );\n            // location.reload();\n            // fix multi page application hmr\n            continue;\n          }\n\n          // get all the accept callbacks of the boundary module that accepts the updated module\n          const selfAcceptedCallbacks = hotContext.acceptCallbacks.filter(\n            ({ deps }) => deps.includes(boundary)\n          );\n          const depsAcceptedCallbacks = hotContext.acceptCallbacks.filter(\n            ({ deps }) => deps.includes(acceptedDep)\n          );\n          // when there are both self accept callbacks and deps accept callbacks in a boundary module, only the deps accept callbacks will be called\n          for (const [acceptedId, acceptedCallbacks] of Object.entries({\n            [acceptedDep]: depsAcceptedCallbacks,\n            [boundary]: selfAcceptedCallbacks\n          })) {\n            if (acceptedCallbacks.length > 0) {\n              const acceptHotContext =\n                this.registeredHotModulesMap.get(acceptedId);\n\n              const disposer = this.disposeMap.get(acceptedId);\n              if (disposer) await disposer(acceptHotContext.data);\n\n              const acceptedExports = moduleSystem.require(acceptedId);\n\n              for (const { deps, fn } of acceptedCallbacks) {\n                fn(\n                  deps.map((dep) =>\n                    dep === acceptedId ? acceptedExports : undefined\n                  )\n                );\n              }\n              // break the loop, only the first accept callback will be called\n              break;\n            }\n          }\n        } catch (err) {\n          // The boundary module's dependencies may not present in current module system for a multi-page application. We should reload the window in this case.\n          // See https://github.com/farm-fe/farm/issues/383\n          logger.error(err);\n          location.reload();\n        }\n      }\n    }\n  }\n\n  async notifyListeners(event: string, data: any) {\n    const callbacks = this.customListenersMap.get(event);\n\n    if (callbacks) {\n      await Promise.allSettled(callbacks.map((cb) => cb(data)));\n    }\n  }\n\n  /**\n   * handle vite HMR message, except farm-update which is handled by handleFarmUpdate, other messages are handled the same as vite\n   * @param payload Vite HMR payload\n   */\n  async handleMessage(payload: HMRPayload) {\n    switch (payload.type) {\n      case 'farm-update':\n        this.notifyListeners('farm:beforeUpdate', payload);\n        this.handleFarmUpdate(payload.result);\n        this.notifyListeners('farm:afterUpdate', payload);\n        break;\n      case 'error': {\n        this.notifyListeners('vite:error', payload);\n        this.notifyListeners('farm:error', payload);\n        if (payload.overlay) createOverlay(payload.err);\n        break;\n      }\n      case 'connected':\n        logger.debug('connected to the server');\n        break;\n      case 'update':\n        this.notifyListeners('vite:beforeUpdate', payload);\n        await Promise.all(\n          payload.updates.map(async (update) => {\n            if (update.type === 'js-update') {\n              this.socket.send(JSON.stringify(update));\n              return;\n            }\n\n            logger.warn('css link update is not supported yet');\n          })\n        );\n        this.notifyListeners('vite:afterUpdate', payload);\n        break;\n      case 'custom':\n        this.notifyListeners(payload.event, payload.data);\n        break;\n      case 'full-reload':\n        this.notifyListeners('vite:beforeFullReload', payload);\n        location.reload();\n        break;\n      case 'prune':\n        this.notifyListeners('vite:beforePrune', payload);\n        this.notifyListeners('farm:beforePrune', payload);\n        break;\n\n      default:\n        logger.warn(`unknown message payload: ${payload}`);\n    }\n  }\n\n  handleFarmUpdate(result: RawHmrUpdateResult) {\n    hasErrorOverlay() && clearOverlay();\n    const immutableModules = new Function(\n      `return ${result.immutableModules}`\n    )();\n    const mutableModules = new Function(`return ${result.mutableModules}`)();\n    const modules = { ...immutableModules, ...mutableModules };\n    this.applyHotUpdates(\n      {\n        added: result.added,\n        changed: result.changed,\n        removed: result.removed,\n        boundaries: result.boundaries,\n        modules,\n        dynamicResources: result.dynamicResources,\n        dynamicModuleResourcesMap: result.dynamicModuleResourcesMap\n      },\n      this.moduleSystem\n    );\n  }\n}\n\nexport function createOverlay(err: any) {\n  clearOverlay();\n  document.body.appendChild(new ErrorOverlay(err));\n}\n\nfunction clearOverlay() {\n  document.querySelectorAll<ErrorOverlay>(overlayId).forEach((n) => n.close());\n}\n\nfunction hasErrorOverlay() {\n  return document.querySelectorAll(overlayId).length;\n}\n\nexport function waitForWindowShow() {\n  return new Promise<void>((resolve) => {\n    const onChange = async () => {\n      if (document.visibilityState === 'visible') {\n        resolve();\n        document.removeEventListener('visibilitychange', onChange);\n      }\n    };\n    document.addEventListener('visibilitychange', onChange);\n  });\n}\n\nasync function waitForSuccessfulPing(\n  socketProtocol: string,\n  hostAndPath: string,\n  ms = 1000\n) {\n  const pingHostProtocol = socketProtocol === 'wss' ? 'https' : 'http';\n\n  const ping = async () => {\n    // A fetch on a websocket URL will return a successful promise with status 400,\n    // but will reject a networking error.\n    // When running on middleware mode, it returns status 426, and an cors error happens if mode is not no-cors\n    try {\n      await fetch(`${pingHostProtocol}://${hostAndPath}`, {\n        mode: 'no-cors',\n        headers: {\n          // Custom headers won't be included in a request with no-cors so (ab)use one of the\n          // safelisted headers to identify the ping request\n          Accept: 'text/x-farm-ping'\n        }\n      });\n      return true;\n    } catch {\n      /* empty */\n    }\n    return false;\n  };\n\n  if (await ping()) {\n    return;\n  }\n  await wait(ms);\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (document.visibilityState === 'visible') {\n      if (await ping()) {\n        break;\n      }\n      await wait(ms);\n    } else {\n      await waitForWindowShow();\n    }\n  }\n}\n\nexport function wait(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n"]}