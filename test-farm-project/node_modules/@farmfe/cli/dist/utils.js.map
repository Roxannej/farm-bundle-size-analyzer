{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { existsSync, mkdirSync, readFileSync, writeFileSync } from 'node:fs';\nimport path from 'node:path';\nimport readline from 'node:readline';\nimport { fileURLToPath } from 'node:url';\nimport type { build, clean, preview, start, watch } from '@farmfe/core';\nimport { Logger } from '@farmfe/core';\nimport spawn from 'cross-spawn';\nimport walkdir from 'walkdir';\n\nimport type { GlobalFarmCLIOptions, ICleanOptions } from './types.js';\n\nconst logger = new Logger();\ninterface installProps {\n  cwd: string;\n  package: string;\n}\n\nexport const TEMPLATES_DIR = path.join(\n  path.dirname(fileURLToPath(import.meta.url)),\n  '..',\n  'templates'\n);\n\nexport async function resolveCore(): Promise<{\n  start: typeof start;\n  build: typeof build;\n  watch: typeof watch;\n  preview: typeof preview;\n  clean: typeof clean;\n}> {\n  try {\n    return import('@farmfe/core');\n  } catch (err) {\n    logger.error(\n      `Cannot find @farmfe/core module, Did you successfully install: \\n${err.stack},`\n    );\n    process.exit(1);\n  }\n}\n\nexport function copyFiles(\n  source: string,\n  dest: string,\n  callback?: (content: string) => string\n): void {\n  walkdir(source, { sync: true }, (p, stat) => {\n    if (stat.isFile()) {\n      const content = readFileSync(p).toString();\n      const newContent = callback?.(content) ?? content;\n\n      const relativePath = path.relative(source, p);\n      const destPath = path.join(dest, relativePath);\n\n      if (!existsSync(path.dirname(destPath))) {\n        mkdirSync(path.dirname(destPath), { recursive: true });\n      }\n\n      writeFileSync(destPath, newContent);\n    }\n  });\n\n  if (!existsSync(path.join(dest, '.gitignore'))) {\n    writeFileSync(\n      path.join(dest, '.gitignore'),\n      `\nnode_modules\n*.farm`\n    );\n  }\n}\n\nexport async function install(options: installProps): Promise<void> {\n  const cwd = options.cwd;\n  return new Promise((resolve, reject) => {\n    const command = options.package;\n    const args = ['install'];\n\n    const child = spawn(command, args, {\n      cwd,\n      stdio: 'inherit'\n    });\n\n    child.once('close', (code: number) => {\n      if (code !== 0) {\n        reject({\n          command: `${command} ${args.join(' ')}`\n        });\n        return;\n      }\n      resolve();\n    });\n    child.once('error', reject);\n  });\n}\n/**\n * 用于规范化目标路径\n * @param {string |undefined} targetDir\n * @returns\n */\nexport function formatTargetDir(targetDir: string | undefined) {\n  return targetDir?.trim()?.replace(/\\/+$/g, '');\n}\n\n/**\n * filter duplicate item in options\n */\nexport function filterDuplicateOptions<T>(options: T) {\n  for (const [key, value] of Object.entries(options)) {\n    if (Array.isArray(value)) {\n      options[key as keyof T] = value[value.length - 1];\n    }\n  }\n}\n\n/**\n * clear command screen\n */\nexport function clearScreen() {\n  const repeatCount = process.stdout.rows - 2;\n  const blank = repeatCount > 0 ? '\\n'.repeat(repeatCount) : '';\n  console.log(blank);\n  readline.cursorTo(process.stdout, 0, 0);\n  readline.clearScreenDown(process.stdout);\n}\n\nexport function cleanOptions(options: GlobalFarmCLIOptions) {\n  const resolveOptions = { ...options };\n\n  delete resolveOptions['--'];\n  delete resolveOptions.m;\n  delete resolveOptions.c;\n  delete resolveOptions.w;\n  delete resolveOptions.l;\n  delete resolveOptions.lazy;\n  delete resolveOptions.mode;\n  delete resolveOptions.base;\n  delete resolveOptions.config;\n  delete resolveOptions.clearScreen;\n\n  return resolveOptions;\n}\n\nexport function resolveCommandOptions(\n  options: GlobalFarmCLIOptions\n): GlobalFarmCLIOptions {\n  const resolveOptions = { ...options };\n  filterDuplicateOptions(resolveOptions);\n  return cleanOptions(resolveOptions);\n}\n\nexport function getConfigPath(root: string, configPath: string) {\n  return path.resolve(root, configPath ?? '');\n}\n\nexport async function handleAsyncOperationErrors<T>(\n  asyncOperation: Promise<T>,\n  errorMessage: string\n) {\n  try {\n    await asyncOperation;\n  } catch (error) {\n    logger.error(`${errorMessage}:\\n${error.stack}`);\n    process.exit(1);\n  }\n}\n\n// prevent node experimental warning\nexport function preventExperimentalWarning() {\n  const defaultEmit = process.emit;\n  process.emit = function (...args: any[]) {\n    if (args[1].name === 'ExperimentalWarning') {\n      return undefined;\n    }\n    return defaultEmit.call(this, ...args);\n  };\n}\n\nexport function resolveRootPath(rootPath = '') {\n  return rootPath && path.isAbsolute(rootPath)\n    ? rootPath\n    : path.resolve(process.cwd(), rootPath);\n}\n\nexport function resolveCliConfig(\n  root: string,\n  options: GlobalFarmCLIOptions & ICleanOptions\n) {\n  root = resolveRootPath(root);\n  const configPath = getConfigPath(root, options.config);\n  return {\n    root,\n    configPath\n  };\n}\n"]}